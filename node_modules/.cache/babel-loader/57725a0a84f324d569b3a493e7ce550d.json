{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/index/tiserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport goods from '../../../db/goods';\nimport Pagination from '../pagination';\nimport Tiser from './tiser';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TiserList = _ref => {\n  _s();\n\n  let {\n    category,\n    search,\n    isFavorites,\n    favorites,\n    onFavorites,\n    cart,\n    onCart,\n    isSorting,\n    filters\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => setCurrentPage(1), [category]);\n  let goodList = goods.then(data => data.filter(good => good['Количество'] !== '0'));\n  console.log(goodList);\n  goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList;\n  goodList = search ? goodList.filter(good => good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()) || good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())) : goodList;\n  goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList;\n  goodList = filters.condition.value !== 'Все' ? goodList.filter(good => good['Состояние'] === filters.condition.value) : goodList;\n\n  if (category === '6') {\n    if (filters.typeCooler.value === 'Процессорный') {\n      goodList = goodList.filter(good => good['Сокет']);\n    } else if (filters.typeCooler.value === 'Корпусной') {\n      goodList = goodList.filter(good => !good['Сокет']);\n    }\n  }\n\n  if (['0', '1', '6', '7', '8'].includes(category)) {\n    goodList = filters.socket.value !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList;\n  }\n\n  if (category === '0') {\n    goodList = filters.core.value !== 'Все' ? goodList.filter(good => good['Ядер\\\\потоков'].split('/')[0] === filters.core.value) : goodList;\n    goodList = filters.cpuFrequency.value !== 'Все' ? goodList.filter(good => isHasFrequency(good)) : goodList;\n    goodList = filters.tdp.value !== 'Все' ? goodList.filter(good => Number(good['Мощность тепловыделения']) === filters.tdp.value) : goodList;\n  }\n\n  if (['0', '1'].includes(category)) {\n    goodList = filters.fsb.value !== 'Все' ? goodList.filter(good => isHasFSB(good)) : goodList;\n  }\n\n  if (['2', '4'].includes(category)) {\n    goodList = filters.platform.value !== 'Все' ? goodList.filter(good => good['Платформа'] === filters.platform.value) : goodList;\n  }\n\n  if (['1', '2', '3'].includes(category)) {\n    goodList = filters.ramType.value !== 'Все' ? goodList.filter(good => good['Тип ОЗУ'] === filters.ramType.value) : goodList;\n    goodList = filters.ramSize.value !== 'Все' ? goodList.filter(good => isHasRAMSize(good)) : goodList;\n  }\n\n  if (['1', '2'].includes(category)) {\n    goodList = filters.ramFraq.value !== 'Все' ? goodList.filter(good => isHasRAMFraq(good)) : goodList;\n  }\n\n  if (['1', '3'].includes(category)) {\n    goodList = filters.videoInterface.value !== 'Все' ? goodList.filter(good => good['Тип видео-интерфейса'] === filters.videoInterface.value) : goodList;\n  }\n\n  if (['1', '4'].includes(category)) {\n    goodList = filters.hddInterface.value !== 'Все' ? goodList.filter(good => isHasHDDInterface(good)) : goodList;\n  }\n\n  if (category === '3') {\n    goodList = filters.videoBitrate.value !== 'Все' ? goodList.filter(good => good['Разрядность шины'] === filters.videoBitrate.value) : goodList;\n  }\n\n  if (category === '4') {\n    goodList = filters.hddType.value !== 'Все' ? goodList.filter(good => good['Тип накопителя'] === filters.hddType.value) : goodList;\n    goodList = filters.hddSize.value !== 'Все' ? goodList.filter(good => good['Объем'] === filters.hddSize.value) : goodList;\n  }\n\n  if (category === '5') {\n    goodList = filters.bpPower.value !== 'Все' ? goodList.filter(good => good['Мощность'] === filters.bpPower.value) : goodList;\n  }\n\n  const sortPriceGoodList = isSorting ? _.orderBy(goodList, ['Цена'], ['asc']) : goodList;\n  const allNumberPage = goodList && Math.ceil(goodList.length / 12);\n  const currentGoodList = goodList && sortPriceGoodList.slice((currentPage - 1) * 12, currentPage * 12);\n  return currentGoodList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentGoodList.map(good => /*#__PURE__*/_jsxDEV(Tiser, {\n      data: good,\n      favorites: favorites,\n      onFavorites: onFavorites,\n      cart: cart,\n      onCart: onCart\n    }, good['Артикул'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 42\n    }, this)), allNumberPage > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      current: currentPage,\n      all: allNumberPage,\n      onPage: handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"not_found\",\n    children: [\"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 55\n    }, this), \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 11\n  }, this);\n\n  function isHasSocket(good) {\n    if (category !== '6') {\n      return good['Сокет'] === filters.socket.value;\n    } else {\n      if (good['Сокет']) {\n        if (good['Сокет'].includes('/')) {\n          let arrSockets = good['Сокет'].split('/');\n          arrSockets = arrSockets.map(item => item.trim());\n          return arrSockets.includes(filters.socket.value);\n        } else {\n          return good['Сокет'] === filters.socket.value;\n        }\n      }\n    }\n  }\n\n  function isHasFrequency(good) {\n    const freq = Number(good['Частота ядра']);\n\n    switch (filters.cpuFrequency.value) {\n      case 'Ниже 2 ГГц':\n        return freq < 2;\n\n      case '2-2.4 ГГц':\n        return freq >= 2 && freq < 2.5;\n\n      case '2.5-2.9 ГГЦ':\n        return freq >= 2.5 && freq < 3;\n\n      case 'От 3 ГГЦ и выше':\n        return freq >= 3;\n\n      default:\n        break;\n    }\n  }\n\n  function isHasFSB(good) {\n    if (good['Частота системной шины'].includes('/')) {\n      return good['Частота системной шины'].split('/').includes(filters.fsb.value);\n    } else {\n      return good['Частота системной шины'] === filters.fsb.value;\n    }\n  }\n\n  function isHasRAMSize(good) {\n    if (good['Объем ОЗУ'].includes('x')) {\n      const size = good['Объем ОЗУ'][0] + ' x ' + good['Объем ОЗУ'][2] + ' ГБ';\n      return size === filters.ramSize.value;\n    } else {\n      return good['Объем ОЗУ'] === filters.ramSize.value;\n    }\n  }\n\n  function isHasRAMFraq(good) {\n    if (good['Частота ОЗУ'].includes('/')) {\n      return good['Частота ОЗУ'].split('/').includes(filters.ramFraq.value);\n    } else {\n      return good['Частота ОЗУ'] === filters.ramFraq.value;\n    }\n  }\n\n  function isHasHDDInterface(good) {\n    if (good['Тип HDD-интерфейса'].includes('/')) {\n      return good['Тип HDD-интерфейса'].split('/').includes(filters.hddInterface.value);\n    } else {\n      return good['Тип HDD-интерфейса'] === filters.hddInterface.value;\n    }\n  }\n\n  function handleChangePage(numberPage) {\n    setCurrentPage(numberPage);\n  }\n};\n\n_s(TiserList, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n\n_c = TiserList;\nexport default TiserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiserList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/index/tiserList.jsx"],"names":["React","useState","useEffect","goods","Pagination","Tiser","_","TiserList","category","search","isFavorites","favorites","onFavorites","cart","onCart","isSorting","filters","currentPage","setCurrentPage","goodList","then","data","filter","good","console","log","toLowerCase","includes","toLocaleLowerCase","condition","value","typeCooler","socket","isHasSocket","core","split","cpuFrequency","isHasFrequency","tdp","Number","fsb","isHasFSB","platform","ramType","ramSize","isHasRAMSize","ramFraq","isHasRAMFraq","videoInterface","hddInterface","isHasHDDInterface","videoBitrate","hddType","hddSize","bpPower","sortPriceGoodList","orderBy","allNumberPage","Math","ceil","length","currentGoodList","slice","map","handleChangePage","arrSockets","item","trim","freq","size","numberPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport goods from '../../../db/goods'\nimport Pagination from '../pagination'\nimport Tiser from './tiser'\nimport _ from 'lodash'\n\n\nconst TiserList =({ category, search, isFavorites, favorites, onFavorites, cart, onCart, isSorting, filters }) => {\n    const [currentPage, setCurrentPage] = useState(1)\n    useEffect(() => setCurrentPage(1), [category])\n\n    let goodList = goods.then(data => data.filter(good => good['Количество'] !== '0'))\n    console.log(goodList)\n\n    goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList\n    \n    goodList = search\n        ? goodList.filter(good => (good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()))\n            || (good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())))\n        : goodList\n\n    goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList\n\n    goodList = filters.condition.value !== 'Все' ? goodList.filter(good => good['Состояние'] === filters.condition.value) : goodList\n\n    if(category === '6') {\n        if(filters.typeCooler.value === 'Процессорный') {\n            goodList = goodList.filter(good => good['Сокет'])\n        }\n        else if(filters.typeCooler.value === 'Корпусной') {\n            goodList = goodList.filter(good => !good['Сокет'])\n        }\n    }\n\n    if(['0', '1', '6', '7', '8'].includes(category)) {\n        goodList = filters.socket.value !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList\n    }\n\n    if(category === '0') {\n        goodList = filters.core.value !== 'Все' ? goodList.filter(good => good['Ядер\\\\потоков'].split('/')[0] === filters.core.value) : goodList\n        goodList = filters.cpuFrequency.value !== 'Все' ? goodList.filter(good => isHasFrequency(good)) : goodList\n        goodList = filters.tdp.value !== 'Все' ? goodList.filter(good => Number(good['Мощность тепловыделения']) === filters.tdp.value) : goodList\n    }\n\n    if(['0', '1'].includes(category)) {\n        goodList = filters.fsb.value !== 'Все' ? goodList.filter(good => isHasFSB(good)) : goodList\n    }\n\n    if(['2', '4'].includes(category)) {\n        goodList = filters.platform.value !== 'Все' ? goodList.filter(good => good['Платформа'] === filters.platform.value) : goodList\n    }\n\n    if(['1', '2', '3'].includes(category)) {\n        goodList = filters.ramType.value !== 'Все' ? goodList.filter(good => good['Тип ОЗУ'] === filters.ramType.value) : goodList\n        goodList = filters.ramSize.value !== 'Все' ? goodList.filter(good => isHasRAMSize(good)) : goodList\n    }\n\n    if(['1', '2'].includes(category)) {\n        goodList = filters.ramFraq.value !== 'Все' ? goodList.filter(good => isHasRAMFraq(good)) : goodList\n    }\n\n    if(['1', '3'].includes(category)) {\n        goodList = filters.videoInterface.value !== 'Все' ? goodList.filter(good => good['Тип видео-интерфейса'] === filters.videoInterface.value) : goodList\n    }\n\n    if(['1', '4'].includes(category)) {\n        goodList = filters.hddInterface.value !== 'Все' ? goodList.filter(good => isHasHDDInterface(good)) : goodList\n    }\n\n    if(category === '3') {\n        goodList = filters.videoBitrate.value !== 'Все' ? goodList.filter(good => good['Разрядность шины'] === filters.videoBitrate.value) : goodList\n    }\n\n    if(category === '4') {\n        goodList = filters.hddType.value !== 'Все' ? goodList.filter(good => good['Тип накопителя'] === filters.hddType.value) : goodList\n        goodList = filters.hddSize.value !== 'Все' ? goodList.filter(good => good['Объем'] === filters.hddSize.value) : goodList\n    }\n\n    if(category === '5') {\n        goodList = filters.bpPower.value !== 'Все' ? goodList.filter(good => good['Мощность'] === filters.bpPower.value) : goodList\n    }\n\n    const sortPriceGoodList = isSorting ? _.orderBy(goodList, ['Цена'], ['asc']) : goodList\n\n    const allNumberPage = goodList && Math.ceil(goodList.length / 12)\n    const currentGoodList = goodList && sortPriceGoodList.slice((currentPage - 1) * 12, currentPage * 12)\n\n\n    return currentGoodList.length !== 0\n        ? <>\n            {currentGoodList.map(good => <Tiser data={good}\n                favorites={favorites} onFavorites={onFavorites}\n                cart={cart} onCart={onCart}\n                key={good['Артикул']} />)}\n            {allNumberPage > 1 && <Pagination current={currentPage} all={allNumberPage} onPage={handleChangePage} />}\n        </>\n        : <h2 className='not_found'>Ничего не найдено.<br/>Попробуйте изменить условия фильтрации.</h2>\n\n    function isHasSocket(good) {\n        if(category !== '6') {\n            return good['Сокет'] === filters.socket.value\n        }\n        else {\n            if(good['Сокет']) {\n                if(good['Сокет'].includes('/')) {\n                    let arrSockets = good['Сокет'].split('/')\n                    arrSockets = arrSockets.map(item => item.trim())\n                    return arrSockets.includes(filters.socket.value)\n                }\n                else {\n                    return good['Сокет'] === filters.socket.value\n                }\n            }\n        }\n    }\n\n    function isHasFrequency(good) {\n        const freq = Number(good['Частота ядра'])\n\n        switch(filters.cpuFrequency.value) {\n            case 'Ниже 2 ГГц':\n                return freq < 2\n            case '2-2.4 ГГц':\n                return freq >= 2 && freq < 2.5\n            case '2.5-2.9 ГГЦ':\n                return freq >= 2.5 && freq < 3\n            case 'От 3 ГГЦ и выше':\n                return freq >= 3\n            default:\n                break\n        }\n    }\n\n    function isHasFSB(good) {\n        if(good['Частота системной шины'].includes('/')) {\n            return good['Частота системной шины'].split('/').includes(filters.fsb.value)\n        }\n        else {\n            return good['Частота системной шины'] === filters.fsb.value\n        }\n    }\n\n\n    function isHasRAMSize(good) {\n        if(good['Объем ОЗУ'].includes('x')) {\n            const size = good['Объем ОЗУ'][0] + ' x ' + good['Объем ОЗУ'][2] + ' ГБ'\n            return size === filters.ramSize.value\n        }\n        else {\n            return good['Объем ОЗУ'] === filters.ramSize.value\n        }\n    }\n\n    function isHasRAMFraq(good) {\n        if(good['Частота ОЗУ'].includes('/')) {\n            return good['Частота ОЗУ'].split('/').includes(filters.ramFraq.value)\n        }\n        else {\n            return good['Частота ОЗУ'] === filters.ramFraq.value\n        }\n    }\n\n    function isHasHDDInterface(good) {\n        if(good['Тип HDD-интерфейса'].includes('/')) {\n            return good['Тип HDD-интерфейса'].split('/').includes(filters.hddInterface.value)\n        }\n        else {\n            return good['Тип HDD-интерфейса'] === filters.hddInterface.value\n        }\n    }\n\n    function handleChangePage(numberPage) {\n        setCurrentPage(numberPage)\n    }\n}\n\nexport default TiserList\n"]},"metadata":{},"sourceType":"module"}