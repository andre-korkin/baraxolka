{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/index/tiserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport goods from '../../../db/goods';\nimport Tiser from './tiser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TiserList = _ref => {\n  _s();\n\n  let {\n    category,\n    search,\n    isFavorites,\n    condition\n  } = _ref;\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')));\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')));\n  let goodList = goods.filter(good => Number(good['Количество']) > 0);\n  goodList = category ? goods.filter(good => good['Артикул'][0] === category) : goods;\n  goodList = search ? goodList.filter(good => good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()) || good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())) : goodList;\n  goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList;\n  goodList = condition !== 'Любое' ? goodList.filter(good => good['Состояние'] === condition) : goodList;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: goodList.map(good => /*#__PURE__*/_jsxDEV(Tiser, {\n      data: good,\n      favorites: favorites,\n      onFavorites: toggleFavorites,\n      cart: cart,\n      onCart: toggleCart\n    }, good['Артикул'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 35\n    }, this))\n  }, void 0, false);\n\n  function toggleFavorites(artcl) {\n    let newFavorites = [];\n\n    if (favorites.includes(artcl)) {\n      newFavorites = favorites.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newFavorites = [...favorites, artcl];\n    }\n\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n  }\n\n  function toggleCart(artcl) {\n    let newCart = [];\n\n    if (cart.includes(artcl)) {\n      newCart = cart.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newCart = [...cart, artcl];\n    }\n\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    setCart(newCart);\n  }\n};\n\n_s(TiserList, \"lMdFmASRrIR8wVIgzf60TjiSGxM=\");\n\n_c = TiserList;\nexport default TiserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiserList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/index/tiserList.jsx"],"names":["React","useState","goods","Tiser","TiserList","category","search","isFavorites","condition","favorites","setFavorites","JSON","parse","localStorage","getItem","cart","setCart","goodList","filter","good","Number","toLowerCase","includes","toLocaleLowerCase","map","toggleFavorites","toggleCart","artcl","newFavorites","goodArticle","setItem","stringify","newCart"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport goods from '../../../db/goods'\nimport Tiser from './tiser'\n\n\nconst TiserList =({ category, search, isFavorites, condition }) => {\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n    const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n\n    let goodList = goods.filter(good => Number(good['Количество']) > 0)\n\n    goodList = category ? goods.filter(good => good['Артикул'][0] === category) : goods\n    \n    goodList = search\n        ? goodList.filter(good => (good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()))\n            || (good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())))\n        : goodList\n\n    goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList\n\n    goodList = condition !== 'Любое' ? goodList.filter(good => good['Состояние'] === condition) : goodList\n\n\n    return (\n        <>\n            {goodList.map(good => <Tiser data={good}\n                favorites={favorites} onFavorites={toggleFavorites}\n                cart={cart} onCart={toggleCart}\n                key={good['Артикул']} />)}\n        </>\n    )\n\n\n    function toggleFavorites(artcl) {\n        let newFavorites = []\n        if(favorites.includes(artcl)) {\n            newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newFavorites = [...favorites, artcl]\n        }\n        localStorage.setItem('favorites', JSON.stringify(newFavorites))\n        setFavorites(newFavorites)\n    }\n\n    function toggleCart(artcl) {\n        let newCart = []\n        if(cart.includes(artcl)) {\n            newCart = cart.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newCart = [...cart, artcl]\n        }\n        localStorage.setItem('cart', JSON.stringify(newCart))\n        setCart(newCart)\n    }\n}\n\nexport default TiserList\n"]},"metadata":{},"sourceType":"module"}