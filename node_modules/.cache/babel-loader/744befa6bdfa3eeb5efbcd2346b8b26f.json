{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/pages/panel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../header';\nimport Categories from '../main/content/categories'; // import Path from '../main/content/path'\n\nimport BeforeContent from '../beforeContent';\nimport Main from '../main';\nimport Footer from '../footer';\nimport goods from '../db/goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Panel() {\n  _s();\n\n  const [goodsFromDB, setGoodsFromDb] = useState();\n  useEffect(() => goods.then(data => setGoodsFromDb(data)), []);\n  const [category, setCategory] = useState(undefined);\n  const [search, setSearch] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: '/panel'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      category: category,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BeforeContent, {\n      search: search,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      page: '/panel',\n      search: search,\n      category: category,\n      goodsFromDB: goodsFromDB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n\n  function handleChange(artcl) {\n    setCategory(artcl);\n    setSearch('');\n  }\n\n  function handleSearch(event) {\n    setSearch(event.target.value);\n    setCategory(undefined);\n  } // const catLabelInit = match.params.catLabel\n  // const catInit = () => {\n  //     if(catLabelInit === undefined) return undefined\n  //     else {\n  //         switch(catLabelInit.toLowerCase()) {\n  //             case 'cpu':\n  //                 return '0'\n  //             case 'mb':\n  //                 return '1'\n  //             case 'ram':\n  //                 return '2'\n  //             case 'vc':\n  //                 return '3'\n  //             case 'hdd':\n  //                 return '4'\n  //             case 'bp':\n  //                 return '5'\n  //             case 'cool':\n  //                 return '6'\n  //             case 'set':\n  //                 return '7'\n  //             case 'comp':\n  //                 return '8'\n  //             default:\n  //                 return undefined\n  //         }\n  //     }\n  // }\n  // const [isFavorites, setIsFavorites] = useState(false)\n  // const [isSorting, setIsSorting] = useState(false)\n  // const dataFilters = {\n  //     condition: {name: 'Состояние', value: 'Все'},\n  //     typeCooler: {name: 'Тип кулеров', value: 'Все'},\n  //     socket: {name: 'Сокет', value: 'Все'},\n  //     core: {name: 'Количество ядер', value: 'Все'},\n  //     cpuFrequency: {name: 'Частота', value: 'Все'},\n  //     fsb: {name: 'Частота шины', value: 'Все'},\n  //     tdp: {name: 'Мощность тепловыделения', value: 'Все'},\n  //     ramType: {name: 'Тип ОЗУ', value: 'Все'},\n  //     ramSize: {name: 'Объем ОЗУ', value: 'Все'},\n  //     ramFraq: {name: 'Частота ОЗУ', value: 'Все'},\n  //     videoInterface: {name: 'Тип видео-интерфейса', value: 'Все'},\n  //     hddInterface: {name: 'Тип HDD-интерфейса', value: 'Все'},\n  //     platform: {name: 'Платформа', value: 'Все'},\n  //     videoBitrate: {name: 'Разрядность шины', value: 'Все'},\n  //     hddType: {name: 'Тип накопителя', value: 'Все'},\n  //     hddSize: {name: 'Объем накопителя', value: 'Все'},\n  //     bpPower: {name: 'Мощность', value: 'Все'}\n  // }\n  // const [filters, setFilters] = useState(dataFilters)\n  // !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n  // !localStorage.getItem('favorites') && localStorage.setItem('favorites', JSON.stringify([]))\n  // const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n  // const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n  // const goodArticle = match.params.goodArticle\n  // function handleFavorites() {\n  //     setIsFavorites(!isFavorites)\n  //     setCategory(undefined)\n  //     setSearch('')\n  //     setFilters(dataFilters)\n  // }\n  // function handleSorting() {\n  //     setIsSorting(!isSorting)\n  // }\n  // function handleSelect(filter, filterName, variant) {\n  //     if(filter === 'typeCooler' && variant === 'Корпусной') {\n  //         setFilters({...filters, socket: {name: 'Сокет', value: 'Все'}, typeCooler: {name: 'Тип кулеров', value: variant}})\n  //     }\n  //     else {\n  //         setFilters({...filters, [filter]: {name: filterName, value: variant}})\n  //     }\n  // }\n  // function toggleFavorites(artcl) {\n  //     let newFavorites = []\n  //     if(favorites.includes(artcl)) {\n  //         newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n  //     }\n  //     else {\n  //         newFavorites = [...favorites, artcl]\n  //     }\n  //     localStorage.setItem('favorites', JSON.stringify(newFavorites))\n  //     setFavorites(newFavorites)\n  // }\n  // function toggleCart(artcl) {\n  //     let newCart = []\n  //     if(cart.includes(artcl)) {\n  //         newCart = cart.filter(goodArticle => goodArticle !== artcl)\n  //     }\n  //     else {\n  //         newCart = [...cart, artcl]\n  //     }\n  //     localStorage.setItem('cart', JSON.stringify(newCart))\n  //     setCart(newCart)\n  // }\n\n}\n\n_s(Panel, \"YuFoblnqUIZ2osPZ89U4UjIGh0E=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/pages/panel.jsx"],"names":["React","useState","useEffect","Header","Categories","BeforeContent","Main","Footer","goods","Panel","goodsFromDB","setGoodsFromDb","then","data","category","setCategory","undefined","search","setSearch","handleChange","handleSearch","artcl","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACAC,EAAAA,SAAS,CAAC,MAAMM,KAAK,CAACI,IAAN,CAAWC,IAAI,IAAIF,cAAc,CAACE,IAAD,CAAjC,CAAP,EAAiD,EAAjD,CAAT;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACe,SAAD,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEa,QAAtB;AAAgC,MAAA,QAAQ,EAAEK;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEF,MAAvB;AAA+B,MAAA,QAAQ,EAAEG;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,QAAZ;AAAsB,MAAA,MAAM,EAAEH,MAA9B;AAAsC,MAAA,QAAQ,EAAEH,QAAhD;AAA0D,MAAA,WAAW,EAAEJ;AAAvE;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAUA,WAASS,YAAT,CAAsBE,KAAtB,EAA6B;AACzBN,IAAAA,WAAW,CAACM,KAAD,CAAX;AACAH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH;;AAED,WAASE,YAAT,CAAsBE,KAAtB,EAA6B;AACzBJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACAT,IAAAA,WAAW,CAACC,SAAD,CAAX;AACH,GAzBY,CA2Bb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;GAtIQP,K;;KAAAA,K;AAwIT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../header'\nimport Categories from '../main/content/categories'\n// import Path from '../main/content/path'\nimport BeforeContent from '../beforeContent'\nimport Main from '../main'\nimport Footer from '../footer'\nimport goods from '../db/goods'\n\n\nfunction Panel() {\n    const [goodsFromDB, setGoodsFromDb] = useState()\n    useEffect(() => goods.then(data => setGoodsFromDb(data)), [])\n\n    const [category, setCategory] = useState(undefined)\n    const [search, setSearch] = useState('')\n\n    return (\n        <div className=\"container\">\n            <Header page={'/panel'} />\n            <Categories category={category} onChange={handleChange} />\n            <BeforeContent search={search} onSearch={handleSearch} />\n            <Main page={'/panel'} search={search} category={category} goodsFromDB={goodsFromDB} />\n            <Footer />\n        </div>\n    )\n\n    function handleChange(artcl) {\n        setCategory(artcl)\n        setSearch('')\n    }\n\n    function handleSearch(event) {\n        setSearch(event.target.value)\n        setCategory(undefined)\n    }\n\n    // const catLabelInit = match.params.catLabel\n\n    // const catInit = () => {\n    //     if(catLabelInit === undefined) return undefined\n    //     else {\n    //         switch(catLabelInit.toLowerCase()) {\n    //             case 'cpu':\n    //                 return '0'\n    //             case 'mb':\n    //                 return '1'\n    //             case 'ram':\n    //                 return '2'\n    //             case 'vc':\n    //                 return '3'\n    //             case 'hdd':\n    //                 return '4'\n    //             case 'bp':\n    //                 return '5'\n    //             case 'cool':\n    //                 return '6'\n    //             case 'set':\n    //                 return '7'\n    //             case 'comp':\n    //                 return '8'\n    //             default:\n    //                 return undefined\n    //         }\n    //     }\n    // }\n\n    // const [isFavorites, setIsFavorites] = useState(false)\n    // const [isSorting, setIsSorting] = useState(false)\n\n    // const dataFilters = {\n    //     condition: {name: 'Состояние', value: 'Все'},\n    //     typeCooler: {name: 'Тип кулеров', value: 'Все'},\n    //     socket: {name: 'Сокет', value: 'Все'},\n    //     core: {name: 'Количество ядер', value: 'Все'},\n    //     cpuFrequency: {name: 'Частота', value: 'Все'},\n    //     fsb: {name: 'Частота шины', value: 'Все'},\n    //     tdp: {name: 'Мощность тепловыделения', value: 'Все'},\n    //     ramType: {name: 'Тип ОЗУ', value: 'Все'},\n    //     ramSize: {name: 'Объем ОЗУ', value: 'Все'},\n    //     ramFraq: {name: 'Частота ОЗУ', value: 'Все'},\n    //     videoInterface: {name: 'Тип видео-интерфейса', value: 'Все'},\n    //     hddInterface: {name: 'Тип HDD-интерфейса', value: 'Все'},\n    //     platform: {name: 'Платформа', value: 'Все'},\n    //     videoBitrate: {name: 'Разрядность шины', value: 'Все'},\n    //     hddType: {name: 'Тип накопителя', value: 'Все'},\n    //     hddSize: {name: 'Объем накопителя', value: 'Все'},\n    //     bpPower: {name: 'Мощность', value: 'Все'}\n    // }\n\n    // const [filters, setFilters] = useState(dataFilters)\n\n    // !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n    // !localStorage.getItem('favorites') && localStorage.setItem('favorites', JSON.stringify([]))\n\n    // const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n    // const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n\n    // const goodArticle = match.params.goodArticle\n\n\n    // function handleFavorites() {\n    //     setIsFavorites(!isFavorites)\n    //     setCategory(undefined)\n    //     setSearch('')\n    //     setFilters(dataFilters)\n    // }\n\n    // function handleSorting() {\n    //     setIsSorting(!isSorting)\n    // }\n\n    // function handleSelect(filter, filterName, variant) {\n    //     if(filter === 'typeCooler' && variant === 'Корпусной') {\n    //         setFilters({...filters, socket: {name: 'Сокет', value: 'Все'}, typeCooler: {name: 'Тип кулеров', value: variant}})\n    //     }\n    //     else {\n    //         setFilters({...filters, [filter]: {name: filterName, value: variant}})\n    //     }\n    // }\n\n    // function toggleFavorites(artcl) {\n    //     let newFavorites = []\n    //     if(favorites.includes(artcl)) {\n    //         newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n    //     }\n    //     else {\n    //         newFavorites = [...favorites, artcl]\n    //     }\n    //     localStorage.setItem('favorites', JSON.stringify(newFavorites))\n    //     setFavorites(newFavorites)\n    // }\n\n    // function toggleCart(artcl) {\n    //     let newCart = []\n    //     if(cart.includes(artcl)) {\n    //         newCart = cart.filter(goodArticle => goodArticle !== artcl)\n    //     }\n    //     else {\n    //         newCart = [...cart, artcl]\n    //     }\n    //     localStorage.setItem('cart', JSON.stringify(newCart))\n    //     setCart(newCart)\n    // }\n}\n\nexport default Panel\n"]},"metadata":{},"sourceType":"module"}