{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/index/tiserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport goods from '../../../db/goods';\nimport Tiser from './tiser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TiserList = _ref => {\n  _s();\n\n  let {\n    category,\n    search,\n    isFavorites,\n    condition,\n    typeCooler,\n    socket\n  } = _ref;\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')));\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')));\n  let goodList = goods.filter(good => good['Количество'] !== '0');\n  goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList;\n  goodList = search ? goodList.filter(good => good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()) || good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())) : goodList;\n  goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList;\n  goodList = condition !== 'Любое' ? goodList.filter(good => good['Состояние'] === condition) : goodList;\n\n  if (category === '6') {\n    if (typeCooler === 'Процессорный') {\n      goodList = goodList.filter(good => good['Сокет']);\n    } else if (typeCooler === 'Корпусной') {\n      goodList = goodList.filter(good => !good['Сокет']);\n    }\n  }\n\n  if (['0', '1', '6', '7', '8'].includes(category)) {\n    goodList = socket !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: goodList.map(good => /*#__PURE__*/_jsxDEV(Tiser, {\n      data: good,\n      favorites: favorites,\n      onFavorites: toggleFavorites,\n      cart: cart,\n      onCart: toggleCart\n    }, good['Артикул'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }, this))\n  }, void 0, false);\n\n  function toggleFavorites(artcl) {\n    let newFavorites = [];\n\n    if (favorites.includes(artcl)) {\n      newFavorites = favorites.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newFavorites = [...favorites, artcl];\n    }\n\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n  }\n\n  function toggleCart(artcl) {\n    let newCart = [];\n\n    if (cart.includes(artcl)) {\n      newCart = cart.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newCart = [...cart, artcl];\n    }\n\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    setCart(newCart);\n  }\n\n  function isHasSocket(good) {\n    if (category !== '6') {\n      return good['Сокет'] === socket;\n    } else {\n      if (good['Сокет']) {\n        if (good['Сокет'].includes(',')) {\n          let arrSockets = good['Сокет'].split(',');\n          arrSockets = arrSockets.map(item => item.trim());\n          return arrSockets.includes(socket);\n        } else {\n          return good['Сокет'] === socket;\n        }\n      }\n    }\n  }\n};\n\n_s(TiserList, \"lMdFmASRrIR8wVIgzf60TjiSGxM=\");\n\n_c = TiserList;\nexport default TiserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiserList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/index/tiserList.jsx"],"names":["React","useState","goods","Tiser","TiserList","category","search","isFavorites","condition","typeCooler","socket","favorites","setFavorites","JSON","parse","localStorage","getItem","cart","setCart","goodList","filter","good","toLowerCase","includes","toLocaleLowerCase","isHasSocket","map","toggleFavorites","toggleCart","artcl","newFavorites","goodArticle","setItem","stringify","newCart","arrSockets","split","item","trim"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport goods from '../../../db/goods'\nimport Tiser from './tiser'\n\n\nconst TiserList =({ category, search, isFavorites, condition, typeCooler, socket }) => {\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n    const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n\n    let goodList = goods.filter(good => good['Количество'] !== '0')\n\n    goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList\n    \n    goodList = search\n        ? goodList.filter(good => (good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()))\n            || (good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())))\n        : goodList\n\n    goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList\n\n    goodList = condition !== 'Любое' ? goodList.filter(good => good['Состояние'] === condition) : goodList\n\n    if(category === '6') {\n        if(typeCooler === 'Процессорный') {\n            goodList = goodList.filter(good => good['Сокет'])\n        }\n        else if(typeCooler === 'Корпусной') {\n            goodList = goodList.filter(good => !good['Сокет'])\n        }\n    }\n\n    if(['0', '1', '6', '7', '8'].includes(category)) {\n        goodList = socket !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList\n    }\n\n\n    return (\n        <>\n            {goodList.map(good => <Tiser data={good}\n                favorites={favorites} onFavorites={toggleFavorites}\n                cart={cart} onCart={toggleCart}\n                key={good['Артикул']} />)}\n        </>\n    )\n\n\n    function toggleFavorites(artcl) {\n        let newFavorites = []\n        if(favorites.includes(artcl)) {\n            newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newFavorites = [...favorites, artcl]\n        }\n        localStorage.setItem('favorites', JSON.stringify(newFavorites))\n        setFavorites(newFavorites)\n    }\n\n    function toggleCart(artcl) {\n        let newCart = []\n        if(cart.includes(artcl)) {\n            newCart = cart.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newCart = [...cart, artcl]\n        }\n        localStorage.setItem('cart', JSON.stringify(newCart))\n        setCart(newCart)\n    }\n\n    function isHasSocket(good) {\n        if(category !== '6') {\n            return good['Сокет'] === socket\n        }\n        else {\n            if(good['Сокет']) {\n                if(good['Сокет'].includes(',')) {\n                    let arrSockets = good['Сокет'].split(',')\n                    arrSockets = arrSockets.map(item => item.trim())\n                    return arrSockets.includes(socket)\n                }\n                else {\n                    return good['Сокет'] === socket\n                }\n            }\n        }\n    }\n}\n\nexport default TiserList\n"]},"metadata":{},"sourceType":"module"}