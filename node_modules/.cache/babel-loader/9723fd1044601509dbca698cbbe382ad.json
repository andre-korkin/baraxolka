{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/sidebar/index/cpu/cores.jsx\";\nimport React from 'react';\nimport MySelect from '../mySelect';\nimport goods from '../../../../db/goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cores = _ref => {\n  let {\n    core,\n    onSelect\n  } = _ref;\n  const goodList = goods.filter(good => good['Количество'] !== '0');\n  const cores = ['1', '2', '3', '4', '6', '8', '10', '12', 'Больше 12'];\n  let arr = []; // список имеющихся ядер\n\n  goodList.forEach(good => {\n    const coreGood = good['Ядер/потоков'].split('/')[0];\n    !arr.includes(coreGood) && arr.push(coreGood);\n  });\n  let variants = ['Все']; // имеющиеся ядра в нужном порядке\n\n  cores.forEach(item => {\n    if (arr.includes(item)) {\n      variants.push(item);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MySelect, {\n    title: 'Количество ядер',\n    variants: variants,\n    variant: core,\n    onSelect: onSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Cores;\nexport default Cores;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cores\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/sidebar/index/cpu/cores.jsx"],"names":["React","MySelect","goods","Cores","core","onSelect","goodList","filter","good","cores","arr","forEach","coreGood","split","includes","push","variants","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;;AAGA,MAAMC,KAAK,GAAG,QAAwB;AAAA,MAAvB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAuB;AAClC,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuB,GAA5C,CAAjB;AACA,QAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,WAA3C,CAAd;AAEA,MAAIC,GAAG,GAAG,EAAV,CAJkC,CAIpB;;AACdJ,EAAAA,QAAQ,CAACK,OAAT,CAAiBH,IAAI,IAAI;AACrB,UAAMI,QAAQ,GAAGJ,IAAI,CAAC,cAAD,CAAJ,CAAqBK,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAjB;AACA,KAACH,GAAG,CAACI,QAAJ,CAAaF,QAAb,CAAD,IAA2BF,GAAG,CAACK,IAAJ,CAASH,QAAT,CAA3B;AACH,GAHD;AAKA,MAAII,QAAQ,GAAG,CAAC,KAAD,CAAf,CAVkC,CAUV;;AACxBP,EAAAA,KAAK,CAACE,OAAN,CAAcM,IAAI,IAAI;AAClB,QAAGP,GAAG,CAACI,QAAJ,CAAaG,IAAb,CAAH,EAAuB;AACnBD,MAAAA,QAAQ,CAACD,IAAT,CAAcE,IAAd;AACH;AACJ,GAJD;AAMA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,iBAAjB;AAAoC,IAAA,QAAQ,EAAED,QAA9C;AAAwD,IAAA,OAAO,EAAEZ,IAAjE;AAAuE,IAAA,QAAQ,EAAEC;AAAjF;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlBD;;KAAMF,K;AAoBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport MySelect from '../mySelect'\nimport goods from '../../../../db/goods'\n\n\nconst Cores = ({ core, onSelect }) => {\n    const goodList = goods.filter(good => good['Количество'] !== '0')\n    const cores = ['1', '2', '3', '4', '6', '8', '10', '12', 'Больше 12']\n\n    let arr = []  // список имеющихся ядер\n    goodList.forEach(good => {\n        const coreGood = good['Ядер/потоков'].split('/')[0]\n        !arr.includes(coreGood) && arr.push(coreGood)\n    })\n\n    let variants = ['Все']  // имеющиеся ядра в нужном порядке\n    cores.forEach(item => {\n        if(arr.includes(item)) {\n            variants.push(item)\n        }\n    })\n\n    return <MySelect title={'Количество ядер'} variants={variants} variant={core} onSelect={onSelect} />\n}\n\nexport default Cores\n"]},"metadata":{},"sourceType":"module"}