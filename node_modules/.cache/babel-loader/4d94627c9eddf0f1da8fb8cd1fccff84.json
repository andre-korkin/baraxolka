{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/index/tiserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport goods from '../../../db/goods';\nimport Tiser from './tiser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TiserList = _ref => {\n  _s();\n\n  let {\n    category,\n    search,\n    isFavorites,\n    condition,\n    typeCooler,\n    socket,\n    core,\n    cpuFrequency,\n    fsbVar,\n    tdp\n  } = _ref;\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')));\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')));\n  let goodList = goods.filter(good => good['Количество'] !== '0');\n  goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList;\n  goodList = search ? goodList.filter(good => good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()) || good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())) : goodList;\n  goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList;\n  goodList = condition !== 'Любое' ? goodList.filter(good => good['Состояние'] === condition) : goodList;\n\n  if (category === '6') {\n    if (typeCooler === 'Процессорный') {\n      goodList = goodList.filter(good => good['Сокет']);\n    } else if (typeCooler === 'Корпусной') {\n      goodList = goodList.filter(good => !good['Сокет']);\n    }\n  }\n\n  if (['0', '1', '6', '7', '8'].includes(category)) {\n    goodList = socket !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList;\n  }\n\n  if (category === '0') {\n    goodList = core !== 'Все' ? goodList.filter(good => good['Ядер/потоков'].split('/')[0] === core) : goodList;\n    goodList = cpuFrequency !== 'Все' ? goodList.filter(good => isHasFrequency(good)) : goodList;\n    goodList = fsbVar !== 'Все' ? goodList.filter(good => isHasFSB(good)) : goodList;\n    goodList = tdp !== 'Все' ? goodList.filter(good => good['Мощность тепловыделения'] === tdp) : goodList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: goodList.map(good => /*#__PURE__*/_jsxDEV(Tiser, {\n      data: good,\n      favorites: favorites,\n      onFavorites: toggleFavorites,\n      cart: cart,\n      onCart: toggleCart\n    }, good['Артикул'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this))\n  }, void 0, false);\n\n  function toggleFavorites(artcl) {\n    let newFavorites = [];\n\n    if (favorites.includes(artcl)) {\n      newFavorites = favorites.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newFavorites = [...favorites, artcl];\n    }\n\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n  }\n\n  function toggleCart(artcl) {\n    let newCart = [];\n\n    if (cart.includes(artcl)) {\n      newCart = cart.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newCart = [...cart, artcl];\n    }\n\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    setCart(newCart);\n  }\n\n  function isHasSocket(good) {\n    if (category !== '6') {\n      return good['Сокет'] === socket;\n    } else {\n      if (good['Сокет']) {\n        if (good['Сокет'].includes(',')) {\n          let arrSockets = good['Сокет'].split(',');\n          arrSockets = arrSockets.map(item => item.trim());\n          return arrSockets.includes(socket);\n        } else {\n          return good['Сокет'] === socket;\n        }\n      }\n    }\n  }\n\n  function isHasFrequency(good) {\n    const freq = Number(good['Частота ядра']);\n\n    switch (cpuFrequency) {\n      case 'Ниже 2 ГГц':\n        return freq < 2;\n\n      case '2-2.4 ГГц':\n        return freq >= 2 && freq < 2.5;\n\n      case '2.5-2.9 ГГЦ':\n        return freq >= 2.5 && freq < 3;\n\n      case 'От 3 ГГЦ и выше':\n        return freq >= 3;\n\n      default:\n        break;\n    }\n  }\n\n  function isHasFSB(good) {\n    if (good['Частота системной шины'].includes('/')) {\n      return good['Частота системной шины'].split('/').includes(fsbVar);\n    } else {\n      return good['Частота системной шины'] === fsbVar;\n    }\n  }\n};\n\n_s(TiserList, \"lMdFmASRrIR8wVIgzf60TjiSGxM=\");\n\n_c = TiserList;\nexport default TiserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiserList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/index/tiserList.jsx"],"names":["React","useState","goods","Tiser","TiserList","category","search","isFavorites","condition","typeCooler","socket","core","cpuFrequency","fsbVar","tdp","favorites","setFavorites","JSON","parse","localStorage","getItem","cart","setCart","goodList","filter","good","toLowerCase","includes","toLocaleLowerCase","isHasSocket","split","isHasFrequency","isHasFSB","map","toggleFavorites","toggleCart","artcl","newFavorites","goodArticle","setItem","stringify","newCart","arrSockets","item","trim","freq","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport goods from '../../../db/goods'\nimport Tiser from './tiser'\n\n\nconst TiserList =({ category, search, isFavorites, condition, typeCooler, socket, core, cpuFrequency, fsbVar, tdp }) => {\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n    const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n\n    let goodList = goods.filter(good => good['Количество'] !== '0')\n\n    goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList\n    \n    goodList = search\n        ? goodList.filter(good => (good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()))\n            || (good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())))\n        : goodList\n\n    goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList\n\n    goodList = condition !== 'Любое' ? goodList.filter(good => good['Состояние'] === condition) : goodList\n\n    if(category === '6') {\n        if(typeCooler === 'Процессорный') {\n            goodList = goodList.filter(good => good['Сокет'])\n        }\n        else if(typeCooler === 'Корпусной') {\n            goodList = goodList.filter(good => !good['Сокет'])\n        }\n    }\n\n    if(['0', '1', '6', '7', '8'].includes(category)) {\n        goodList = socket !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList\n    }\n\n    if(category === '0') {\n        goodList = core !== 'Все' ? goodList.filter(good => good['Ядер/потоков'].split('/')[0] === core) : goodList\n        goodList = cpuFrequency !== 'Все' ? goodList.filter(good => isHasFrequency(good)) : goodList\n        goodList = fsbVar !== 'Все' ? goodList.filter(good => isHasFSB(good)) : goodList\n        goodList = tdp !== 'Все' ? goodList.filter(good => good['Мощность тепловыделения'] === tdp) : goodList\n    }\n\n\n    return (\n        <>\n            {goodList.map(good => <Tiser data={good}\n                favorites={favorites} onFavorites={toggleFavorites}\n                cart={cart} onCart={toggleCart}\n                key={good['Артикул']} />)}\n        </>\n    )\n\n\n    function toggleFavorites(artcl) {\n        let newFavorites = []\n        if(favorites.includes(artcl)) {\n            newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newFavorites = [...favorites, artcl]\n        }\n        localStorage.setItem('favorites', JSON.stringify(newFavorites))\n        setFavorites(newFavorites)\n    }\n\n    function toggleCart(artcl) {\n        let newCart = []\n        if(cart.includes(artcl)) {\n            newCart = cart.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newCart = [...cart, artcl]\n        }\n        localStorage.setItem('cart', JSON.stringify(newCart))\n        setCart(newCart)\n    }\n\n    function isHasSocket(good) {\n        if(category !== '6') {\n            return good['Сокет'] === socket\n        }\n        else {\n            if(good['Сокет']) {\n                if(good['Сокет'].includes(',')) {\n                    let arrSockets = good['Сокет'].split(',')\n                    arrSockets = arrSockets.map(item => item.trim())\n                    return arrSockets.includes(socket)\n                }\n                else {\n                    return good['Сокет'] === socket\n                }\n            }\n        }\n    }\n\n    function isHasFrequency(good) {\n        const freq = Number(good['Частота ядра'])\n\n        switch(cpuFrequency) {\n            case 'Ниже 2 ГГц':\n                return freq < 2\n            case '2-2.4 ГГц':\n                return freq >= 2 && freq < 2.5\n            case '2.5-2.9 ГГЦ':\n                return freq >= 2.5 && freq < 3\n            case 'От 3 ГГЦ и выше':\n                return freq >= 3\n            default:\n                break\n        }\n    }\n\n    function isHasFSB(good) {\n        if(good['Частота системной шины'].includes('/')) {\n            return good['Частота системной шины'].split('/').includes(fsbVar)\n        }\n        else {\n            return good['Частота системной шины'] === fsbVar\n        }\n    }\n}\n\nexport default TiserList\n"]},"metadata":{},"sourceType":"module"}