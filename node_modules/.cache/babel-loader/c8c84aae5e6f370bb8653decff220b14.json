{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/cart/goodList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport goods from '../../../db/goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoodList = () => {\n  _s();\n\n  const goodArticles = JSON.parse(localStorage.getItem('cart'));\n  const goodsInCart = goods.filter(good => goodArticles.includes(good['Артикул']));\n  const goodsData = {};\n  goodsInCart.forEach(good => {\n    goodsData[good['Артикул']] = {\n      price: good['Цена'],\n      amount: 1,\n      amountMax: good['Количество'],\n      cost: good['Цена']\n    };\n  });\n  const [goodsCost, setGoodsCost] = useState(goodsData);\n  localStorage.setItem('cost', JSON.stringify(goodsCost));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"good-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0424\\u043E\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0410\\u0440\\u0442\\u0438\\u043A\\u0443\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0426\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: goodsInCart.map(good => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: good['Фото'] ? imgPrefix(good) + good['Фото'] : './img/no-image.png',\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"link\",\n            children: goodName(good)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good['Артикул']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [good['Цена'], \" \\u0442\\u0433\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    onClick: () => handleIncrement(good),\n                    children: \"\\u25B2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: goodsCost[good['Артикул']].amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    onClick: () => handleDecrement(good),\n                    children: \"\\u25BC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [goodsCost[good['Артикул']].cost, \" \\u0442\\u0433\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, good['Артикул'], true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n\n  function imgPrefix(good) {\n    const artcl = good['Артикул'][0];\n    let prefix = './img/';\n\n    switch (artcl) {\n      case '0':\n        prefix += 'cpu/';\n        break;\n\n      case '1':\n        prefix += 'mb/';\n        break;\n\n      case '2':\n        prefix += 'ram/';\n        break;\n\n      case '3':\n        prefix += 'vc/';\n        break;\n\n      case '4':\n        prefix += 'hdd/';\n        break;\n\n      case '5':\n        prefix += 'bp/';\n        break;\n\n      case '6':\n        prefix += 'cool/';\n        break;\n\n      default:\n        break;\n    }\n\n    return prefix;\n  }\n\n  function goodName(good) {\n    let title = good['Название'];\n    const artcl = good['Артикул'][0];\n\n    switch (artcl) {\n      case '2':\n        title = good['Тип ОЗУ'] + ' ' + good['Бренд'] + ' ' + good['Объем ОЗУ'];\n        break;\n\n      case '4':\n        title = good['Тип накопителя'] + ' ' + good['Бренд'] + ' ' + good['Объем'];\n        break;\n\n      case '5':\n        title += ' ' + good['Мощность'] + ' Вт';\n        break;\n\n      case '6':\n        title += !good['Сокет'] ? ' ' + good['Диаметр'] + ' мм' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    return title;\n  }\n\n  function handleIncrement(good) {\n    let newAmount = goodsCost[good['Артикул']].amount;\n    let newCost = goodsCost[good['Артикул']].cost;\n\n    if (newAmount < goodsCost[good['Артикул']].amountMax) {\n      newAmount++;\n      newCost = good['Цена'] * newAmount;\n    }\n\n    const newData = {\n      price: good['Цена'],\n      amount: newAmount,\n      amountMax: good['Количество'],\n      cost: newCost\n    };\n    setGoodsCost({ ...goodsCost,\n      [good['Артикул']]: newData\n    });\n  }\n\n  function handleDecrement(good) {\n    let newAmount = goodsCost[good['Артикул']].amount;\n    let newCost = goodsCost[good['Артикул']].cost;\n\n    if (newAmount > 1) {\n      newAmount--;\n      newCost = good['Цена'] * newAmount;\n    }\n\n    const newData = {\n      price: good['Цена'],\n      amount: newAmount,\n      amountMax: good['Количество'],\n      cost: newCost\n    };\n    setGoodsCost({ ...goodsCost,\n      [good['Артикул']]: newData\n    });\n  } // function getSumCost() {\n  //     return Object.keys(goodsCost).map(data => data.cost).reduce((a, b) => a + b)\n  // }\n\n};\n\n_s(GoodList, \"ewMr+HBXTTKlUl/P1JjpkYLiAE4=\");\n\n_c = GoodList;\nexport default GoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoodList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/cart/goodList.jsx"],"names":["React","useState","goods","GoodList","goodArticles","JSON","parse","localStorage","getItem","goodsInCart","filter","good","includes","goodsData","forEach","price","amount","amountMax","cost","goodsCost","setGoodsCost","setItem","stringify","map","imgPrefix","goodName","handleIncrement","handleDecrement","artcl","prefix","title","newAmount","newCost","newData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport goods from '../../../db/goods'\n\n\nconst GoodList = () => {\n    const goodArticles = JSON.parse(localStorage.getItem('cart'))\n    const goodsInCart = goods.filter(good => goodArticles.includes(good['Артикул']))\n\n    const goodsData = {}\n    goodsInCart.forEach(good => {\n        goodsData[good['Артикул']] = {\n            price: good['Цена'],\n            amount: 1,\n            amountMax: good['Количество'],\n            cost: good['Цена']\n        }\n    })\n\n    const [goodsCost, setGoodsCost] = useState(goodsData)\n    localStorage.setItem('cost', JSON.stringify(goodsCost))\n\n    return (\n        <table className=\"good-list\">\n            <thead>\n                <tr>\n                    <th>Фото</th>\n                    <th>Название</th>\n                    <th>Артикул</th>\n                    <th>Цена</th>\n                    <th>Количество</th>\n                    <th>Стоимость</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {goodsInCart.map(good => {\n                    return (\n                        <tr key={good['Артикул']}>\n                            <td><img  src={good['Фото'] ? imgPrefix(good) + good['Фото'] : './img/no-image.png'} alt='' /></td>\n                            <td className=\"link\">{goodName(good)}</td>\n                            <td>{good['Артикул']}</td>\n                            <td>{good['Цена']} тг</td>\n                            <td>\n                                <table>\n                                    <tbody>\n                                        <tr><td onClick={() => handleIncrement(good)}>▲</td></tr>\n                                        <tr><td>{goodsCost[good['Артикул']].amount}</td></tr>\n                                        <tr><td onClick={() => handleDecrement(good)}>▼</td></tr>\n                                    </tbody>\n                                </table>\n                            </td>\n                            <td>{goodsCost[good['Артикул']].cost} тг</td>\n                            <td><div className=\"delete\">×</div></td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n\n    function imgPrefix(good) {\n        const artcl = good['Артикул'][0]\n        let prefix = './img/'\n\n        switch(artcl) {\n            case '0':\n                prefix += 'cpu/'\n                break\n            case '1':\n                prefix += 'mb/'\n                break\n            case '2':\n                prefix += 'ram/'\n                break\n            case '3':\n                prefix += 'vc/'\n                break\n            case '4':\n                prefix += 'hdd/'\n                break\n            case '5':\n                prefix += 'bp/'\n                break\n            case '6':\n                prefix += 'cool/'\n                break\n            default:\n                break\n        }\n\n        return prefix\n    }\n\n    function goodName(good) {\n        let title = good['Название']\n\n        const artcl = good['Артикул'][0]\n\n        switch(artcl) {\n            case '2':\n                title = good['Тип ОЗУ'] + ' ' + good['Бренд'] + ' ' + good['Объем ОЗУ']\n                break\n            case '4':\n                title = good['Тип накопителя'] + ' ' + good['Бренд'] + ' ' + good['Объем']\n                break\n            case '5':\n                title += ' ' + good['Мощность'] + ' Вт'\n                break\n            case '6':\n                title += !good['Сокет'] ? ' ' + good['Диаметр'] + ' мм' : ''\n                break\n            default:\n                break\n        }\n\n        return title\n    }\n\n    function handleIncrement(good) {\n        let newAmount = goodsCost[good['Артикул']].amount\n        let newCost = goodsCost[good['Артикул']].cost\n\n        if(newAmount < goodsCost[good['Артикул']].amountMax) {\n            newAmount++\n            newCost = good['Цена'] * newAmount\n        }\n\n        const newData = {\n            price: good['Цена'],\n            amount: newAmount,\n            amountMax: good['Количество'],\n            cost: newCost\n        }\n        setGoodsCost({...goodsCost, [good['Артикул']]: newData})\n    }\n\n    function handleDecrement(good) {\n        let newAmount = goodsCost[good['Артикул']].amount\n        let newCost = goodsCost[good['Артикул']].cost\n\n        if(newAmount > 1) {\n            newAmount--\n            newCost = good['Цена'] * newAmount\n        }\n\n        const newData = {\n            price: good['Цена'],\n            amount: newAmount,\n            amountMax: good['Количество'],\n            cost: newCost\n        }\n        setGoodsCost({...goodsCost, [good['Артикул']]: newData})\n    }\n\n    // function getSumCost() {\n    //     return Object.keys(goodsCost).map(data => data.cost).reduce((a, b) => a + b)\n    // }\n}\n\nexport default GoodList\n"]},"metadata":{},"sourceType":"module"}