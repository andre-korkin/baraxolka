{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/pages/cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../header';\nimport Path from '../main/content/path';\nimport Main from '../main';\nimport Footer from '../footer';\nimport goods from '../db/goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]));\n  const goodArticles = JSON.parse(localStorage.getItem('cart'));\n  const [goodsFromDB, setGoodsFromDb] = useState();\n  useEffect(() => goods.then(data => setGoodsFromDb(data)), []); // if(goodsFromDB === undefined) return <h2 className='not_found'>Получение списка товаров...</h2>\n\n  const goodList = goodsFromDB || []; // if(typeof goodList === 'string') return <h2 className='not_found'>{goodList}</h2>\n\n  const goodsInCart = goodList.filter(good => goodArticles.includes(good['Артикул']));\n  const orderInit = goodsInCart.map(good => {\n    return { ...good,\n      amount: 1,\n      cost: Number(good['Цена'])\n    };\n  });\n  const [order, setOrder] = useState();\n  useEffect(() => setOrder(orderInit));\n  console.log(order);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: '/cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Path, {\n      page: '/cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      page: '/cart',\n      order: order,\n      onIncrement: handleIncrement,\n      onDecrement: handleDecrement,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  function handleIncrement(artcl) {\n    const newOrder = order.map(good => {\n      if (good['Артикул'] === artcl && good.amount < good['Количество']) {\n        good.amount++;\n      }\n\n      return good;\n    });\n    setOrder(newOrder);\n  }\n\n  function handleDecrement(artcl) {\n    const newOrder = order.map(good => {\n      if (good['Артикул'] === artcl && good.amount > 1) {\n        good.amount--;\n      }\n\n      return good;\n    });\n    setOrder(newOrder);\n  }\n\n  function handleDelete(artcl) {\n    const newOrder = order.filter(good => good['Артикул'] !== artcl);\n    setOrder(newOrder);\n    localStorage.setItem('cart', JSON.stringify(goodArticles.filter(item => item !== artcl)));\n  }\n}\n\n_s(Cart, \"6Jn0DsptA2xH61AiXCdfkjCWaFQ=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/pages/cart.jsx"],"names":["React","useState","useEffect","Header","Path","Main","Footer","goods","Cart","localStorage","getItem","setItem","JSON","stringify","goodArticles","parse","goodsFromDB","setGoodsFromDb","then","data","goodList","goodsInCart","filter","good","includes","orderInit","map","amount","cost","Number","order","setOrder","console","log","handleIncrement","handleDecrement","handleDelete","artcl","newOrder","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../header'\nimport Path from '../main/content/path'\nimport Main from '../main'\nimport Footer from '../footer'\nimport goods from '../db/goods'\n\n\nfunction Cart() {\n    !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n    const goodArticles = JSON.parse(localStorage.getItem('cart'))\n\n    const [goodsFromDB, setGoodsFromDb] = useState()\n    useEffect(() => goods.then(data => setGoodsFromDb(data)), [])\n\n    // if(goodsFromDB === undefined) return <h2 className='not_found'>Получение списка товаров...</h2>\n\n    const goodList = goodsFromDB || []\n    // if(typeof goodList === 'string') return <h2 className='not_found'>{goodList}</h2>\n\n    const goodsInCart = goodList.filter(good => goodArticles.includes(good['Артикул']))\n\n    const orderInit = goodsInCart.map(good => {\n        return {...good, amount: 1, cost: Number(good['Цена'])}\n    })\n\n    const [order, setOrder] = useState()\n    useEffect(() => setOrder(orderInit))\n    console.log(order)\n\n    return (\n        <div className=\"container\">\n            <Header page={'/cart'} />\n            <Path page={'/cart'} />\n            <Main page={'/cart'} order={order} onIncrement={handleIncrement}\n                onDecrement={handleDecrement} onDelete={handleDelete} />\n            <Footer />\n        </div>\n    )\n\n    function handleIncrement(artcl) {\n        const newOrder = order.map(good => {\n            if(good['Артикул'] === artcl && good.amount < good['Количество']) {\n                good.amount++\n            }\n            return good\n        })\n\n        setOrder(newOrder)\n    }\n\n    function handleDecrement(artcl) {\n        const newOrder = order.map(good => {\n            if(good['Артикул'] === artcl && good.amount > 1) {\n                good.amount--\n            }\n            return good\n        })\n\n        setOrder(newOrder)\n    }\n\n    function handleDelete(artcl) {\n        const newOrder = order.filter(good => good['Артикул'] !== artcl)\n        setOrder(newOrder)\n        localStorage.setItem('cart', JSON.stringify(goodArticles.filter(item => item !== artcl)))\n    }\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}