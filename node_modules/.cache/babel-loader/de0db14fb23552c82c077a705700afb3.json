{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/pages/cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../header';\nimport Path from '../main/content/path';\nimport Main from '../main';\nimport Footer from '../footer';\nimport goods from '../db/goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]));\n  const goodArticles = JSON.parse(localStorage.getItem('cart'));\n  const [order, setOrder] = useState([]);\n  useEffect(() => goods.then(data => {\n    if (typeof data === 'string') setOrder(data);else {\n      setOrder(data.filter(good => JSON.parse(localStorage.getItem('cart')).includes(good['Артикул'])).map(good => {\n        return { ...good,\n          amount: 1,\n          cost: Number(good['Цена'])\n        };\n      }));\n    }\n  }), []); // if(typeof goodList === 'string') return <h2 className='not_found'>{goodList}</h2>\n  // const goodsInCart = goodsFromDB.filter(good => goodArticles.includes(good['Артикул']))\n  // const orderInit = goodsInCart.map(good => {\n  //     return {...good, amount: 1, cost: Number(good['Цена'])}\n  // })\n  // const [order, setOrder] = useState()\n  // console.log(order)\n\n  const orderCost = typeof order !== 'string' && order.length !== 0 ? order.map(good => good.amount * good['Цена']).reduce((a, b) => a + b) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: '/cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Path, {\n      page: '/cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      page: '/cart',\n      order: order,\n      orderCost: orderCost,\n      onIncrement: handleIncrement,\n      onDecrement: handleDecrement,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n\n  function handleIncrement(artcl) {\n    const newOrder = order.map(good => {\n      if (good['Артикул'] === artcl && good.amount < good['Количество']) {\n        good.amount++;\n      }\n\n      return good;\n    });\n    setOrder(newOrder);\n  }\n\n  function handleDecrement(artcl) {\n    const newOrder = order.map(good => {\n      if (good['Артикул'] === artcl && good.amount > 1) {\n        good.amount--;\n      }\n\n      return good;\n    });\n    setOrder(newOrder);\n  }\n\n  function handleDelete(artcl) {\n    const newOrder = order.filter(good => good['Артикул'] !== artcl);\n    setOrder(newOrder);\n    localStorage.setItem('cart', JSON.stringify(goodArticles.filter(item => item !== artcl)));\n  }\n}\n\n_s(Cart, \"hrssQtolRlHDBpXD0gPXTVjPgsU=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/pages/cart.jsx"],"names":["React","useState","useEffect","Header","Path","Main","Footer","goods","Cart","localStorage","getItem","setItem","JSON","stringify","goodArticles","parse","order","setOrder","then","data","filter","good","includes","map","amount","cost","Number","orderCost","length","reduce","a","b","handleIncrement","handleDecrement","handleDelete","artcl","newOrder","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../header'\nimport Path from '../main/content/path'\nimport Main from '../main'\nimport Footer from '../footer'\nimport goods from '../db/goods'\n\n\nfunction Cart() {\n    !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n    const goodArticles = JSON.parse(localStorage.getItem('cart'))\n\n    const [order, setOrder] = useState([])\n    useEffect(() => goods.then(data => {\n        if(typeof data === 'string') setOrder(data)\n        else {\n            setOrder(data\n                .filter(good => JSON.parse(localStorage.getItem('cart')).includes(good['Артикул']))\n                .map(good => {\n                    return {...good, amount: 1, cost: Number(good['Цена'])}\n                }))\n        }\n    }), [])\n\n    // if(typeof goodList === 'string') return <h2 className='not_found'>{goodList}</h2>\n\n    // const goodsInCart = goodsFromDB.filter(good => goodArticles.includes(good['Артикул']))\n\n    // const orderInit = goodsInCart.map(good => {\n    //     return {...good, amount: 1, cost: Number(good['Цена'])}\n    // })\n\n    // const [order, setOrder] = useState()\n    // console.log(order)\n\n    const orderCost = typeof order !== 'string' && order.length !== 0\n        ? order.map(good => good.amount * good['Цена']).reduce((a, b) => a + b) : 0\n\n    return (\n        <div className=\"container\">\n            <Header page={'/cart'} />\n            <Path page={'/cart'} />\n            <Main page={'/cart'} order={order} orderCost={orderCost}\n                onIncrement={handleIncrement} onDecrement={handleDecrement} onDelete={handleDelete} />\n            <Footer />\n        </div>\n    )\n\n    function handleIncrement(artcl) {\n        const newOrder = order.map(good => {\n            if(good['Артикул'] === artcl && good.amount < good['Количество']) {\n                good.amount++\n            }\n            return good\n        })\n\n        setOrder(newOrder)\n    }\n\n    function handleDecrement(artcl) {\n        const newOrder = order.map(good => {\n            if(good['Артикул'] === artcl && good.amount > 1) {\n                good.amount--\n            }\n            return good\n        })\n\n        setOrder(newOrder)\n    }\n\n    function handleDelete(artcl) {\n        const newOrder = order.filter(good => good['Артикул'] !== artcl)\n        setOrder(newOrder)\n        localStorage.setItem('cart', JSON.stringify(goodArticles.filter(item => item !== artcl)))\n    }\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}