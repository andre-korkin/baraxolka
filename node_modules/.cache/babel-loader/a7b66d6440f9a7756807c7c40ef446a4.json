{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/index/tiserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport goods from '../../../db/goods';\nimport Tiser from './tiser'; // const TiserList =({ category, search, isFavorites, condition, typeCooler, socket, core, cpuFrequency, fsbVar, tdp, ramType, ramSize, ramFraq, videoInterface, hddInterface, platform, videoBitrate, hddType, hddSize, bpPower }) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TiserList = _ref => {\n  _s();\n\n  let {\n    category,\n    search,\n    isFavorites,\n    filters\n  } = _ref;\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')));\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')));\n  let goodList = goods.filter(good => good['Количество'] !== '0');\n  goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList;\n  goodList = search ? goodList.filter(good => good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()) || good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())) : goodList;\n  goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList;\n  goodList = filters.condition.value !== 'Все' ? goodList.filter(good => good['Состояние'] === filters.condition.value) : goodList;\n\n  if (category === '6') {\n    if (filters.typeCooler.value === 'Процессорный') {\n      goodList = goodList.filter(good => good['Сокет']);\n    } else if (filters.typeCooler.value === 'Корпусной') {\n      goodList = goodList.filter(good => !good['Сокет']);\n    }\n  }\n\n  if (['0', '1', '6', '7', '8'].includes(category)) {\n    goodList = filters.socket.value !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList;\n  }\n\n  if (category === '0') {\n    goodList = filters.core.value !== 'Все' ? goodList.filter(good => good['Ядер/потоков'].split('/')[0] === filters.core.value) : goodList;\n    goodList = filters.cpuFrequency.value !== 'Все' ? goodList.filter(good => isHasFrequency(good)) : goodList;\n    goodList = filters.tdp.value !== 'Все' ? goodList.filter(good => Number(good['Мощность тепловыделения']) === filters.tdp.value) : goodList;\n  }\n\n  if (['0', '1'].includes(category)) {\n    goodList = fsbVar !== 'Все' ? goodList.filter(good => isHasFSB(good)) : goodList;\n  }\n\n  if (['2', '4'].includes(category)) {\n    goodList = platform !== 'Все' ? goodList.filter(good => good['Платформа'] === platform) : goodList;\n  }\n\n  if (['1', '2', '3'].includes(category)) {\n    goodList = ramType !== 'Все' ? goodList.filter(good => good['Тип ОЗУ'] === ramType) : goodList;\n    goodList = ramSize !== 'Все' ? goodList.filter(good => isHasRAMSize(good)) : goodList;\n  }\n\n  if (['1', '2'].includes(category)) {\n    goodList = ramFraq !== 'Все' ? goodList.filter(good => isHasRAMFraq(good)) : goodList;\n  }\n\n  if (['1', '3'].includes(category)) {\n    goodList = videoInterface !== 'Все' ? goodList.filter(good => good['Тип видео-интерфейса'] === videoInterface) : goodList;\n  }\n\n  if (['1', '4'].includes(category)) {\n    goodList = hddInterface !== 'Все' ? goodList.filter(good => isHasHDDInterface(good)) : goodList;\n  }\n\n  if (category === '3') {\n    goodList = videoBitrate !== 'Все' ? goodList.filter(good => good['Разрядность шины'] === videoBitrate) : goodList;\n  }\n\n  if (category === '4') {\n    goodList = hddType !== 'Все' ? goodList.filter(good => good['Тип накопителя'] === hddType) : goodList;\n    goodList = hddSize !== 'Все' ? goodList.filter(good => good['Объем'] === hddSize) : goodList;\n  }\n\n  if (category === '5') {\n    goodList = bpPower !== 'Все' ? goodList.filter(good => good['Мощность'] === bpPower) : goodList;\n  }\n\n  return goodList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: goodList.map(good => /*#__PURE__*/_jsxDEV(Tiser, {\n      data: good,\n      favorites: favorites,\n      onFavorites: toggleFavorites,\n      cart: cart,\n      onCart: toggleCart\n    }, good['Артикул'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 35\n    }, this))\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"not_found\",\n    children: [\"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 55\n    }, this), \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 11\n  }, this);\n\n  function toggleFavorites(artcl) {\n    let newFavorites = [];\n\n    if (favorites.includes(artcl)) {\n      newFavorites = favorites.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newFavorites = [...favorites, artcl];\n    }\n\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n  }\n\n  function toggleCart(artcl) {\n    let newCart = [];\n\n    if (cart.includes(artcl)) {\n      newCart = cart.filter(goodArticle => goodArticle !== artcl);\n    } else {\n      newCart = [...cart, artcl];\n    }\n\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    setCart(newCart);\n  }\n\n  function isHasSocket(good) {\n    if (category !== '6') {\n      return good['Сокет'] === socket;\n    } else {\n      if (good['Сокет']) {\n        if (good['Сокет'].includes(',')) {\n          let arrSockets = good['Сокет'].split(',');\n          arrSockets = arrSockets.map(item => item.trim());\n          return arrSockets.includes(socket);\n        } else {\n          return good['Сокет'] === socket;\n        }\n      }\n    }\n  }\n\n  function isHasFrequency(good) {\n    const freq = Number(good['Частота ядра']);\n\n    switch (cpuFrequency) {\n      case 'Ниже 2 ГГц':\n        return freq < 2;\n\n      case '2-2.4 ГГц':\n        return freq >= 2 && freq < 2.5;\n\n      case '2.5-2.9 ГГЦ':\n        return freq >= 2.5 && freq < 3;\n\n      case 'От 3 ГГЦ и выше':\n        return freq >= 3;\n\n      default:\n        break;\n    }\n  }\n\n  function isHasFSB(good) {\n    if (good['Частота системной шины'].includes('/')) {\n      return good['Частота системной шины'].split('/').includes(fsbVar);\n    } else {\n      return good['Частота системной шины'] === fsbVar;\n    }\n  }\n\n  function isHasRAMSize(good) {\n    if (good['Объем ОЗУ'].includes('x')) {\n      const size = good['Объем ОЗУ'][0] + ' x ' + good['Объем ОЗУ'][2] + ' ГБ';\n      return size === ramSize;\n    } else {\n      return good['Объем ОЗУ'] === ramSize;\n    }\n  }\n\n  function isHasRAMFraq(good) {\n    if (good['Частота ОЗУ'].includes('/')) {\n      return good['Частота ОЗУ'].split('/').includes(ramFraq);\n    } else {\n      return good['Частота ОЗУ'] === ramFraq;\n    }\n  }\n\n  function isHasHDDInterface(good) {\n    if (good['Тип HDD-интерфейса'].includes('/')) {\n      return good['Тип HDD-интерфейса'].split('/').includes(hddInterface);\n    } else {\n      return good['Тип HDD-интерфейса'] === hddInterface;\n    }\n  }\n};\n\n_s(TiserList, \"lMdFmASRrIR8wVIgzf60TjiSGxM=\");\n\n_c = TiserList;\nexport default TiserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiserList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/index/tiserList.jsx"],"names":["React","useState","goods","Tiser","TiserList","category","search","isFavorites","filters","favorites","setFavorites","JSON","parse","localStorage","getItem","cart","setCart","goodList","filter","good","toLowerCase","includes","toLocaleLowerCase","condition","value","typeCooler","socket","isHasSocket","core","split","cpuFrequency","isHasFrequency","tdp","Number","fsbVar","isHasFSB","platform","ramType","ramSize","isHasRAMSize","ramFraq","isHasRAMFraq","videoInterface","hddInterface","isHasHDDInterface","videoBitrate","hddType","hddSize","bpPower","length","map","toggleFavorites","toggleCart","artcl","newFavorites","goodArticle","setItem","stringify","newCart","arrSockets","item","trim","freq","size"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport goods from '../../../db/goods'\nimport Tiser from './tiser'\n\n\n// const TiserList =({ category, search, isFavorites, condition, typeCooler, socket, core, cpuFrequency, fsbVar, tdp, ramType, ramSize, ramFraq, videoInterface, hddInterface, platform, videoBitrate, hddType, hddSize, bpPower }) => {\nconst TiserList =({ category, search, isFavorites, filters }) => {\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n    const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n\n    let goodList = goods.filter(good => good['Количество'] !== '0')\n\n    goodList = category ? goodList.filter(good => good['Артикул'][0] === category) : goodList\n    \n    goodList = search\n        ? goodList.filter(good => (good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()))\n            || (good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())))\n        : goodList\n\n    goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList\n\n    goodList = filters.condition.value !== 'Все' ? goodList.filter(good => good['Состояние'] === filters.condition.value) : goodList\n\n    if(category === '6') {\n        if(filters.typeCooler.value === 'Процессорный') {\n            goodList = goodList.filter(good => good['Сокет'])\n        }\n        else if(filters.typeCooler.value === 'Корпусной') {\n            goodList = goodList.filter(good => !good['Сокет'])\n        }\n    }\n\n    if(['0', '1', '6', '7', '8'].includes(category)) {\n        goodList = filters.socket.value !== 'Все' ? goodList.filter(good => isHasSocket(good)) : goodList\n    }\n\n    if(category === '0') {\n        goodList = filters.core.value !== 'Все' ? goodList.filter(good => good['Ядер/потоков'].split('/')[0] === filters.core.value) : goodList\n        goodList = filters.cpuFrequency.value !== 'Все' ? goodList.filter(good => isHasFrequency(good)) : goodList\n        goodList = filters.tdp.value !== 'Все' ? goodList.filter(good => Number(good['Мощность тепловыделения']) === filters.tdp.value) : goodList\n    }\n\n    if(['0', '1'].includes(category)) {\n        goodList = fsbVar !== 'Все' ? goodList.filter(good => isHasFSB(good)) : goodList\n    }\n\n    if(['2', '4'].includes(category)) {\n        goodList = platform !== 'Все' ? goodList.filter(good => good['Платформа'] === platform) : goodList\n    }\n\n    if(['1', '2', '3'].includes(category)) {\n        goodList = ramType !== 'Все' ? goodList.filter(good => good['Тип ОЗУ'] === ramType) : goodList\n        goodList = ramSize !== 'Все' ? goodList.filter(good => isHasRAMSize(good)) : goodList\n    }\n\n    if(['1', '2'].includes(category)) {\n        goodList = ramFraq !== 'Все' ? goodList.filter(good => isHasRAMFraq(good)) : goodList\n    }\n\n    if(['1', '3'].includes(category)) {\n        goodList = videoInterface !== 'Все' ? goodList.filter(good => good['Тип видео-интерфейса'] === videoInterface) : goodList\n    }\n\n    if(['1', '4'].includes(category)) {\n        goodList = hddInterface !== 'Все' ? goodList.filter(good => isHasHDDInterface(good)) : goodList\n    }\n\n    if(category === '3') {\n        goodList = videoBitrate !== 'Все' ? goodList.filter(good => good['Разрядность шины'] === videoBitrate) : goodList\n    }\n\n    if(category === '4') {\n        goodList = hddType !== 'Все' ? goodList.filter(good => good['Тип накопителя'] === hddType) : goodList\n        goodList = hddSize !== 'Все' ? goodList.filter(good => good['Объем'] === hddSize) : goodList\n    }\n\n    if(category === '5') {\n        goodList = bpPower !== 'Все' ? goodList.filter(good => good['Мощность'] === bpPower) : goodList\n    }\n\n\n    return goodList.length !== 0\n        ? <>\n            {goodList.map(good => <Tiser data={good}\n                favorites={favorites} onFavorites={toggleFavorites}\n                cart={cart} onCart={toggleCart}\n                key={good['Артикул']} />)}\n        </>\n        : <h2 className='not_found'>Ничего не найдено.<br/>Попробуйте изменить условия фильтрации.</h2>\n\n\n    function toggleFavorites(artcl) {\n        let newFavorites = []\n        if(favorites.includes(artcl)) {\n            newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newFavorites = [...favorites, artcl]\n        }\n        localStorage.setItem('favorites', JSON.stringify(newFavorites))\n        setFavorites(newFavorites)\n    }\n\n    function toggleCart(artcl) {\n        let newCart = []\n        if(cart.includes(artcl)) {\n            newCart = cart.filter(goodArticle => goodArticle !== artcl)\n        }\n        else {\n            newCart = [...cart, artcl]\n        }\n        localStorage.setItem('cart', JSON.stringify(newCart))\n        setCart(newCart)\n    }\n\n    function isHasSocket(good) {\n        if(category !== '6') {\n            return good['Сокет'] === socket\n        }\n        else {\n            if(good['Сокет']) {\n                if(good['Сокет'].includes(',')) {\n                    let arrSockets = good['Сокет'].split(',')\n                    arrSockets = arrSockets.map(item => item.trim())\n                    return arrSockets.includes(socket)\n                }\n                else {\n                    return good['Сокет'] === socket\n                }\n            }\n        }\n    }\n\n    function isHasFrequency(good) {\n        const freq = Number(good['Частота ядра'])\n\n        switch(cpuFrequency) {\n            case 'Ниже 2 ГГц':\n                return freq < 2\n            case '2-2.4 ГГц':\n                return freq >= 2 && freq < 2.5\n            case '2.5-2.9 ГГЦ':\n                return freq >= 2.5 && freq < 3\n            case 'От 3 ГГЦ и выше':\n                return freq >= 3\n            default:\n                break\n        }\n    }\n\n    function isHasFSB(good) {\n        if(good['Частота системной шины'].includes('/')) {\n            return good['Частота системной шины'].split('/').includes(fsbVar)\n        }\n        else {\n            return good['Частота системной шины'] === fsbVar\n        }\n    }\n\n\n    function isHasRAMSize(good) {\n        if(good['Объем ОЗУ'].includes('x')) {\n            const size = good['Объем ОЗУ'][0] + ' x ' + good['Объем ОЗУ'][2] + ' ГБ'\n            return size === ramSize\n        }\n        else {\n            return good['Объем ОЗУ'] === ramSize\n        }\n    }\n\n    function isHasRAMFraq(good) {\n        if(good['Частота ОЗУ'].includes('/')) {\n            return good['Частота ОЗУ'].split('/').includes(ramFraq)\n        }\n        else {\n            return good['Частота ОЗУ'] === ramFraq\n        }\n    }\n\n    function isHasHDDInterface(good) {\n        if(good['Тип HDD-интерфейса'].includes('/')) {\n            return good['Тип HDD-интерфейса'].split('/').includes(hddInterface)\n        }\n        else {\n            return good['Тип HDD-интерфейса'] === hddInterface\n        }\n    }\n}\n\nexport default TiserList\n"]},"metadata":{},"sourceType":"module"}