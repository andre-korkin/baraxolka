{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/pages/cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from '../header';\nimport Path from '../main/content/path';\nimport Main from '../main';\nimport Footer from '../footer';\nimport goods from '../db/goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]));\n  const goodArticles = JSON.parse(localStorage.getItem('cart'));\n  const goodsInCart = goods.filter(good => goodArticles.includes(good['Артикул'])); // const goodsData = {}\n  // goodsInCart.forEach(good => {\n  //     goodsData[good['Артикул']] = {\n  //         price: good['Цена'],\n  //         amount: 1,\n  //         amountMax: good['Количество'],\n  //         cost: good['Цена']\n  //     }\n  // })\n\n  const order = goodsInCart.map(good => {\n    return { ...good,\n      amount: 1,\n      cost: good['Цена']\n    };\n  });\n  const [goodsCost, setGoodsCost] = useState(goodsData);\n  const allSumCost = Object.keys(goodsCost).map(data => goodsCost[data].cost).reduce((a, b) => a + b);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: '/cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Path, {\n      page: '/cart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      page: '/cart',\n      goodsInCart: goodsInCart,\n      goodsCost: goodsCost,\n      allSumCost: allSumCost,\n      onIncrement: handleIncrement,\n      onDecrement: handleDecrement,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  function handleIncrement(good) {\n    let newAmount = goodsCost[good['Артикул']].amount;\n    let newCost = goodsCost[good['Артикул']].cost;\n\n    if (newAmount < goodsCost[good['Артикул']].amountMax) {\n      newAmount++;\n      newCost = good['Цена'] * newAmount;\n    }\n\n    const newData = {\n      price: good['Цена'],\n      amount: newAmount,\n      amountMax: good['Количество'],\n      cost: newCost\n    };\n    setGoodsCost({ ...goodsCost,\n      [good['Артикул']]: newData\n    });\n  }\n\n  function handleDecrement(good) {\n    let newAmount = goodsCost[good['Артикул']].amount;\n    let newCost = goodsCost[good['Артикул']].cost;\n\n    if (newAmount > 1) {\n      newAmount--;\n      newCost = good['Цена'] * newAmount;\n    }\n\n    const newData = {\n      price: good['Цена'],\n      amount: newAmount,\n      amountMax: good['Количество'],\n      cost: newCost\n    };\n    setGoodsCost({ ...goodsCost,\n      [good['Артикул']]: newData\n    });\n  }\n\n  function handleDelete(good) {}\n}\n\n_s(Cart, \"ewMr+HBXTTKlUl/P1JjpkYLiAE4=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/pages/cart.jsx"],"names":["React","useState","Header","Path","Main","Footer","goods","Cart","localStorage","getItem","setItem","JSON","stringify","goodArticles","parse","goodsInCart","filter","good","includes","order","map","amount","cost","goodsCost","setGoodsCost","goodsData","allSumCost","Object","keys","data","reduce","a","b","handleIncrement","handleDecrement","handleDelete","newAmount","newCost","amountMax","newData","price"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Header from '../header'\nimport Path from '../main/content/path'\nimport Main from '../main'\nimport Footer from '../footer'\nimport goods from '../db/goods'\n\n\nfunction Cart() {\n    !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n    const goodArticles = JSON.parse(localStorage.getItem('cart'))\n    const goodsInCart = goods.filter(good => goodArticles.includes(good['Артикул']))\n\n    // const goodsData = {}\n    // goodsInCart.forEach(good => {\n    //     goodsData[good['Артикул']] = {\n    //         price: good['Цена'],\n    //         amount: 1,\n    //         amountMax: good['Количество'],\n    //         cost: good['Цена']\n    //     }\n    // })\n\n    const order = goodsInCart.map(good => {\n        return {...good, amount: 1, cost: good['Цена']}\n    })\n\n    const [goodsCost, setGoodsCost] = useState(goodsData)\n    const allSumCost = Object.keys(goodsCost).map(data => goodsCost[data].cost).reduce((a, b) => a + b)\n\n    return (\n        <div className=\"container\">\n            <Header page={'/cart'} />\n            <Path page={'/cart'} />\n            <Main page={'/cart'} goodsInCart={goodsInCart} goodsCost={goodsCost} allSumCost={allSumCost}\n                onIncrement={handleIncrement} onDecrement={handleDecrement} onDelete={handleDelete} />\n            <Footer />\n        </div>\n    )\n\n    function handleIncrement(good) {\n        let newAmount = goodsCost[good['Артикул']].amount\n        let newCost = goodsCost[good['Артикул']].cost\n\n        if(newAmount < goodsCost[good['Артикул']].amountMax) {\n            newAmount++\n            newCost = good['Цена'] * newAmount\n        }\n\n        const newData = {\n            price: good['Цена'],\n            amount: newAmount,\n            amountMax: good['Количество'],\n            cost: newCost\n        }\n        setGoodsCost({...goodsCost, [good['Артикул']]: newData})\n    }\n\n    function handleDecrement(good) {\n        let newAmount = goodsCost[good['Артикул']].amount\n        let newCost = goodsCost[good['Артикул']].cost\n\n        if(newAmount > 1) {\n            newAmount--\n            newCost = good['Цена'] * newAmount\n        }\n\n        const newData = {\n            price: good['Цена'],\n            amount: newAmount,\n            amountMax: good['Количество'],\n            cost: newCost\n        }\n        setGoodsCost({...goodsCost, [good['Артикул']]: newData})\n    }\n\n    function handleDelete(good) {\n\n    }\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}