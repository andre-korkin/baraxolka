{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/index/tiserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport goods from '../../../db/goods';\nimport Tiser from './tiser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TiserList = _ref => {\n  _s();\n\n  let {\n    category,\n    search,\n    isFavorites\n  } = _ref;\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')));\n  let goodList = category ? goods.filter(good => good['Артикул'][0] === category) : goods;\n  goodList = search ? goodList.filter(good => good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()) || good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())) : goodList;\n  goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: goodList.map(good => /*#__PURE__*/_jsxDEV(Tiser, {\n      data: good,\n      favorites: favorites,\n      onFavorites: toggleFavorites\n    }, good['Артикул'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 35\n    }, this))\n  }, void 0, false);\n\n  function toggleFavorites(artcl) {\n    if (favorites.includes(artcl)) {\n      localStorage.setItem('favorites', JSON.stringify(favorites.filter(goodArticle => goodArticle !== artcl)));\n    } else {\n      const newFav = [...favorites, artcl];\n      localStorage.setItem('favorites', JSON.stringify(newFav));\n    }\n\n    setFavorites(JSON.parse(localStorage.getItem('favorites')));\n  }\n};\n\n_s(TiserList, \"PJyHTA6s8okDtl0CL1lKTVxDHL0=\");\n\n_c = TiserList;\nexport default TiserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiserList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/index/tiserList.jsx"],"names":["React","useState","goods","Tiser","TiserList","category","search","isFavorites","favorites","setFavorites","JSON","parse","localStorage","getItem","goodList","filter","good","toLowerCase","includes","toLocaleLowerCase","map","toggleFavorites","artcl","setItem","stringify","goodArticle","newFav"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAGA,MAAMC,SAAS,GAAE,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAsC;AACpD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAD,CAA1C;AAEA,MAAIC,QAAQ,GAAGT,QAAQ,GAAGH,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,MAAuBX,QAA5C,CAAH,GAA2DH,KAAlF;AAEAY,EAAAA,QAAQ,GAAGR,MAAM,GACXQ,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAKA,IAAI,CAAC,UAAD,CAAJ,IAAoBA,IAAI,CAAC,UAAD,CAAJ,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCZ,MAAM,CAACW,WAAP,EAAxC,CAArB,IAClBD,IAAI,CAAC,OAAD,CAAJ,IAAiBA,IAAI,CAAC,OAAD,CAAJ,CAAcG,iBAAd,GAAkCD,QAAlC,CAA2CZ,MAAM,CAACa,iBAAP,EAA3C,CADvB,CADW,GAGXL,QAHN;AAKAA,EAAAA,QAAQ,GAAGP,WAAW,GAAGO,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIR,SAAS,CAACU,QAAV,CAAmBF,IAAI,CAAC,SAAD,CAAvB,CAAxB,CAAH,GAAkEF,QAAxF;AAGA,sBACI;AAAA,cACKA,QAAQ,CAACM,GAAT,CAAaJ,IAAI,iBAAI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,IAAb;AAClB,MAAA,SAAS,EAAER,SADO;AACI,MAAA,WAAW,EAAEa;AADjB,OACuCL,IAAI,CAAC,SAAD,CAD3C;AAAA;AAAA;AAAA;AAAA,YAArB;AADL,mBADJ;;AAQA,WAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAGd,SAAS,CAACU,QAAV,CAAmBI,KAAnB,CAAH,EAA8B;AAC1BV,MAAAA,YAAY,CAACW,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAehB,SAAS,CAACO,MAAV,CAAiBU,WAAW,IAAIA,WAAW,KAAKH,KAAhD,CAAf,CAAlC;AACH,KAFD,MAGK;AACD,YAAMI,MAAM,GAAG,CAAC,GAAGlB,SAAJ,EAAec,KAAf,CAAf;AACAV,MAAAA,YAAY,CAACW,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAeE,MAAf,CAAlC;AACH;;AACDjB,IAAAA,YAAY,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAD,CAAZ;AACH;AACJ,CA/BD;;GAAMT,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport goods from '../../../db/goods'\nimport Tiser from './tiser'\n\n\nconst TiserList =({ category, search, isFavorites }) => {\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n\n    let goodList = category ? goods.filter(good => good['Артикул'][0] === category) : goods\n    \n    goodList = search\n        ? goodList.filter(good => (good['Название'] && good['Название'].toLowerCase().includes(search.toLowerCase()))\n            || (good['Бренд'] && good['Бренд'].toLocaleLowerCase().includes(search.toLocaleLowerCase())))\n        : goodList\n\n    goodList = isFavorites ? goodList.filter(good => favorites.includes(good['Артикул'])) : goodList\n\n\n    return (\n        <>\n            {goodList.map(good => <Tiser data={good}\n                favorites={favorites} onFavorites={toggleFavorites} key={good['Артикул']} />)}\n        </>\n    )\n\n\n    function toggleFavorites(artcl) {\n        if(favorites.includes(artcl)) {\n            localStorage.setItem('favorites', JSON.stringify(favorites.filter(goodArticle => goodArticle !== artcl)))\n        }\n        else {\n            const newFav = [...favorites, artcl]\n            localStorage.setItem('favorites', JSON.stringify(newFav))\n        }\n        setFavorites(JSON.parse(localStorage.getItem('favorites')))\n    }\n}\n\nexport default TiserList\n"]},"metadata":{},"sourceType":"module"}