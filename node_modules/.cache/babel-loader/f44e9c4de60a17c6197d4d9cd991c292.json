{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/sidebar/index/platform.jsx\";\nimport React from 'react';\nimport MySelect from './mySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Platform = _ref => {\n  let {\n    goodsFromDB,\n    category,\n    filters,\n    onSelect\n  } = _ref;\n  let goodList = goodsFromDB || [];\n  if (typeof goodList === 'string') return null;\n  goodList = goodList.filter(good => good['Количество'] !== '0' && good['Артикул'][0] === category);\n  const pltfrm = ['компьютер', 'ноутбук'];\n  let arr = []; // список имеющихся платформ\n\n  goodList.forEach(good => !arr.includes(good['Платформа']) && arr.push(good['Платформа']));\n  let variants = ['Все']; // имеющиеся платформы в нужном порядке\n\n  pltfrm.forEach(item => {\n    if (arr.includes(item)) {\n      variants.push(item);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MySelect, {\n    filter: 'platform',\n    filterObject: filters.platform,\n    variants: variants,\n    onSelect: onSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Platform;\nexport default Platform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Platform\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/sidebar/index/platform.jsx"],"names":["React","MySelect","Platform","goodsFromDB","category","filters","onSelect","goodList","filter","good","pltfrm","arr","forEach","includes","push","variants","item","platform"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,MAAMC,QAAQ,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA;AAAlC,GAAiD;AAC/D,MAAIC,QAAQ,GAAGJ,WAAW,IAAI,EAA9B;AACA,MAAG,OAAOI,QAAP,KAAoB,QAAvB,EAAiC,OAAO,IAAP;AAEjCA,EAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAAC,YAAD,CAAJ,KAAuB,GAAvB,IAA8BA,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,MAAuBL,QAA7E,CAAX;AACA,QAAMM,MAAM,GAAG,CAAC,WAAD,EAAc,SAAd,CAAf;AAEA,MAAIC,GAAG,GAAG,EAAV,CAP+D,CAOjD;;AACdJ,EAAAA,QAAQ,CAACK,OAAT,CAAiBH,IAAI,IAAI,CAACE,GAAG,CAACE,QAAJ,CAAaJ,IAAI,CAAC,WAAD,CAAjB,CAAD,IAAoCE,GAAG,CAACG,IAAJ,CAASL,IAAI,CAAC,WAAD,CAAb,CAA7D;AAEA,MAAIM,QAAQ,GAAG,CAAC,KAAD,CAAf,CAV+D,CAUvC;;AACxBL,EAAAA,MAAM,CAACE,OAAP,CAAeI,IAAI,IAAI;AACnB,QAAGL,GAAG,CAACE,QAAJ,CAAaG,IAAb,CAAH,EAAuB;AACnBD,MAAAA,QAAQ,CAACD,IAAT,CAAcE,IAAd;AACH;AACJ,GAJD;AAMA,sBAAO,QAAC,QAAD;AAAU,IAAA,MAAM,EAAE,UAAlB;AAA8B,IAAA,YAAY,EAAEX,OAAO,CAACY,QAApD;AAA8D,IAAA,QAAQ,EAAEF,QAAxE;AAAkF,IAAA,QAAQ,EAAET;AAA5F;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlBD;;KAAMJ,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport MySelect from './mySelect'\n\n\nconst Platform = ({ goodsFromDB, category, filters, onSelect }) => {\n    let goodList = goodsFromDB || []\n    if(typeof goodList === 'string') return null\n\n    goodList = goodList.filter(good => good['Количество'] !== '0' && good['Артикул'][0] === category)\n    const pltfrm = ['компьютер', 'ноутбук']\n\n    let arr = []  // список имеющихся платформ\n    goodList.forEach(good => !arr.includes(good['Платформа']) && arr.push(good['Платформа']))\n\n    let variants = ['Все']  // имеющиеся платформы в нужном порядке\n    pltfrm.forEach(item => {\n        if(arr.includes(item)) {\n            variants.push(item)\n        }\n    })\n\n    return <MySelect filter={'platform'} filterObject={filters.platform} variants={variants} onSelect={onSelect} />\n}\n\nexport default Platform\n"]},"metadata":{},"sourceType":"module"}