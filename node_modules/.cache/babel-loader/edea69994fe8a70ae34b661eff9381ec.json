{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/main/content/cart/goodList.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AmountItem from '../amoutItem';\nimport DeleteItem from '../deleteItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoodList = _ref => {\n  let {\n    order,\n    onIncrement,\n    onDecrement,\n    onDelete\n  } = _ref;\n  // if(order.length === 0) return <h2 className='not_found'>Получение списка товаров...</h2>\n  return order ? /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"good-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0424\\u043E\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0410\\u0440\\u0442\\u0438\\u043A\\u0443\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0426\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: order.map(good => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: good['Фото'] ? imgPrefix(good) + good['Фото'] : './img/no-image.png',\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: goodPath(good),\n              children: goodName(good)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good['Артикул']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [good['Цена'], \" \\u0442\\u0433\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(AmountItem, {\n              good: good,\n              onIncrement: onIncrement,\n              onDecrement: onDecrement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [good.amount * good['Цена'], \" \\u0442\\u0433\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(DeleteItem, {\n              good: good,\n              onDelete: onDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, good['Артикул'], true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"not_found\",\n    children: \"\\u0412 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0435 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this);\n\n  function imgPrefix(good) {\n    const artcl = good['Артикул'][0];\n    let prefix = './img/';\n\n    switch (artcl) {\n      case '0':\n        prefix += 'cpu/';\n        break;\n\n      case '1':\n        prefix += 'mb/';\n        break;\n\n      case '2':\n        prefix += 'ram/';\n        break;\n\n      case '3':\n        prefix += 'vc/';\n        break;\n\n      case '4':\n        prefix += 'hdd/';\n        break;\n\n      case '5':\n        prefix += 'bp/';\n        break;\n\n      case '6':\n        prefix += 'cool/';\n        break;\n\n      default:\n        break;\n    }\n\n    return prefix;\n  }\n\n  function goodPath(good) {\n    const artcl = good['Артикул'][0];\n    let url = '';\n\n    switch (artcl) {\n      case '0':\n        url = '/cpu/';\n        break;\n\n      case '1':\n        url = '/mb/';\n        break;\n\n      case '2':\n        url = '/ram/';\n        break;\n\n      case '3':\n        url = '/vc/';\n        break;\n\n      case '4':\n        url = '/hdd/';\n        break;\n\n      case '5':\n        url = '/bp/';\n        break;\n\n      case '6':\n        url = '/cool/';\n        break;\n\n      case '7':\n        url = '/set/';\n        break;\n\n      case '8':\n        url = '/comp/';\n        break;\n\n      default:\n        break;\n    }\n\n    url += good['Артикул'];\n    return url;\n  }\n\n  function goodName(good) {\n    let title = good['Название'];\n    const artcl = good['Артикул'][0];\n\n    switch (artcl) {\n      case '2':\n        title = good['Тип ОЗУ'] + ' ' + good['Бренд'] + ' ' + good['Объем ОЗУ'];\n        break;\n\n      case '4':\n        title = good['Тип накопителя'] + ' ' + good['Бренд'] + ' ' + good['Объем'];\n        break;\n\n      case '5':\n        title += ' ' + good['Мощность'] + ' Вт';\n        break;\n\n      case '6':\n        title += !good['Сокет'] ? ' ' + good['Диаметр'] + ' мм' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    return title;\n  }\n};\n\n_c = GoodList;\nexport default GoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoodList\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/main/content/cart/goodList.jsx"],"names":["React","Link","AmountItem","DeleteItem","GoodList","order","onIncrement","onDecrement","onDelete","map","good","imgPrefix","goodPath","goodName","amount","artcl","prefix","url","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AmountItem from '../amoutItem'\nimport DeleteItem from '../deleteItem'\n\n\nconst GoodList = ({ order, onIncrement, onDecrement, onDelete }) => {\n    // if(order.length === 0) return <h2 className='not_found'>Получение списка товаров...</h2>\n\n    return order\n        ? <table className=\"good-list\">\n            <thead>\n                <tr>\n                    <th>Фото</th>\n                    <th>Название</th>\n                    <th>Артикул</th>\n                    <th>Цена</th>\n                    <th>Количество</th>\n                    <th>Стоимость</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {order.map(good => {\n                    return (\n                        <tr key={good['Артикул']}>\n                            <td><img  src={good['Фото'] ? imgPrefix(good) + good['Фото'] : './img/no-image.png'} alt='' /></td>\n                            <td className=\"link\">{<Link to={goodPath(good)}>{goodName(good)}</Link>}</td>\n                            <td>{good['Артикул']}</td>\n                            <td>{good['Цена']} тг</td>\n                            <td>\n                                <AmountItem good={good} onIncrement={onIncrement} onDecrement={onDecrement} />\n                            </td>\n                            <td>{good.amount * good['Цена']} тг</td>\n                            <td><DeleteItem good={good} onDelete={onDelete} /></td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        : <h2 className='not_found'>В корзине пока нет товаров.</h2>\n\n    function imgPrefix(good) {\n        const artcl = good['Артикул'][0]\n        let prefix = './img/'\n\n        switch(artcl) {\n            case '0':\n                prefix += 'cpu/'\n                break\n            case '1':\n                prefix += 'mb/'\n                break\n            case '2':\n                prefix += 'ram/'\n                break\n            case '3':\n                prefix += 'vc/'\n                break\n            case '4':\n                prefix += 'hdd/'\n                break\n            case '5':\n                prefix += 'bp/'\n                break\n            case '6':\n                prefix += 'cool/'\n                break\n            default:\n                break\n        }\n\n        return prefix\n    }\n\n    function goodPath(good) {\n        const artcl = good['Артикул'][0]\n        let url = ''\n\n        switch(artcl) {\n            case '0':\n                url = '/cpu/'\n                break\n            case '1':\n                url = '/mb/'\n                break\n            case '2':\n                url = '/ram/'\n                break\n            case '3':\n                url = '/vc/'\n                break\n            case '4':\n                url = '/hdd/'\n                break\n            case '5':\n                url = '/bp/'\n                break\n            case '6':\n                url = '/cool/'\n                break\n            case '7':\n                url = '/set/'\n                break\n            case '8':\n                url = '/comp/'\n                break\n            default:\n                break\n        }\n\n        url += good['Артикул']\n\n        return url\n    }\n\n    function goodName(good) {\n        let title = good['Название']\n\n        const artcl = good['Артикул'][0]\n\n        switch(artcl) {\n            case '2':\n                title = good['Тип ОЗУ'] + ' ' + good['Бренд'] + ' ' + good['Объем ОЗУ']\n                break\n            case '4':\n                title = good['Тип накопителя'] + ' ' + good['Бренд'] + ' ' + good['Объем']\n                break\n            case '5':\n                title += ' ' + good['Мощность'] + ' Вт'\n                break\n            case '6':\n                title += !good['Сокет'] ? ' ' + good['Диаметр'] + ' мм' : ''\n                break\n            default:\n                break\n        }\n\n        return title\n    }\n}\n\nexport default GoodList\n"]},"metadata":{},"sourceType":"module"}