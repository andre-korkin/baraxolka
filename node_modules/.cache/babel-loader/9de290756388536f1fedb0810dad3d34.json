{"ast":null,"code":"var _jsxFileName = \"/home/andre/baraxolka/src/pages/panel.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Header from '../header';\nimport Categories from '../main/content/categories';\nimport Path from '../main/content/path';\nimport BeforeContent from '../beforeContent';\nimport Main from '../main';\nimport Footer from '../footer';\nimport goods from '../db/goods';\nimport AdminGoodList from '../main/content/panel/index/adminGoodList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Panel() {\n  return /*#__PURE__*/_jsxDEV(AdminGoodList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this); // const [goodsFromDB, setGoodsFromDb] = useState()\n  // useEffect(() => goods.then(data => setGoodsFromDb(data)), [])\n  // const catLabelInit = match.params.catLabel\n  // const catInit = () => {\n  //     if(catLabelInit === undefined) return undefined\n  //     else {\n  //         switch(catLabelInit.toLowerCase()) {\n  //             case 'cpu':\n  //                 return '0'\n  //             case 'mb':\n  //                 return '1'\n  //             case 'ram':\n  //                 return '2'\n  //             case 'vc':\n  //                 return '3'\n  //             case 'hdd':\n  //                 return '4'\n  //             case 'bp':\n  //                 return '5'\n  //             case 'cool':\n  //                 return '6'\n  //             case 'set':\n  //                 return '7'\n  //             case 'comp':\n  //                 return '8'\n  //             default:\n  //                 return undefined\n  //         }\n  //     }\n  // }\n  // const [category, setCategory] = useState(catInit())\n  // const [search, setSearch] = useState('')\n  // const [isFavorites, setIsFavorites] = useState(false)\n  // const [isSorting, setIsSorting] = useState(false)\n  // const dataFilters = {\n  //     condition: {name: 'Состояние', value: 'Все'},\n  //     typeCooler: {name: 'Тип кулеров', value: 'Все'},\n  //     socket: {name: 'Сокет', value: 'Все'},\n  //     core: {name: 'Количество ядер', value: 'Все'},\n  //     cpuFrequency: {name: 'Частота', value: 'Все'},\n  //     fsb: {name: 'Частота шины', value: 'Все'},\n  //     tdp: {name: 'Мощность тепловыделения', value: 'Все'},\n  //     ramType: {name: 'Тип ОЗУ', value: 'Все'},\n  //     ramSize: {name: 'Объем ОЗУ', value: 'Все'},\n  //     ramFraq: {name: 'Частота ОЗУ', value: 'Все'},\n  //     videoInterface: {name: 'Тип видео-интерфейса', value: 'Все'},\n  //     hddInterface: {name: 'Тип HDD-интерфейса', value: 'Все'},\n  //     platform: {name: 'Платформа', value: 'Все'},\n  //     videoBitrate: {name: 'Разрядность шины', value: 'Все'},\n  //     hddType: {name: 'Тип накопителя', value: 'Все'},\n  //     hddSize: {name: 'Объем накопителя', value: 'Все'},\n  //     bpPower: {name: 'Мощность', value: 'Все'}\n  // }\n  // const [filters, setFilters] = useState(dataFilters)\n  // !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n  // !localStorage.getItem('favorites') && localStorage.setItem('favorites', JSON.stringify([]))\n  // const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n  // const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n  // const goodArticle = match.params.goodArticle\n  // return (\n  //     <div className=\"container\">\n  //         {!goodArticle && <>\n  //             <Header page={'/'} onChange={handleChange} />\n  //             <Categories category={category} onChange={handleChange} />\n  //             <BeforeContent search={search} onSearch={handleSearch}\n  //                 isFavorites={isFavorites} onFavorites={handleFavorites}\n  //                 isSorting={isSorting} onSorting={handleSorting} />\n  //             <Main page={'/'} search={search} isFavorites={isFavorites} isSorting={isSorting}\n  //                 favorites={favorites} onFavorites={toggleFavorites} cart={cart} onCart={toggleCart}\n  //                 category={category} onSelect={handleSelect} goodsFromDB={goodsFromDB} filters={filters} />\n  //         </>}\n  //         {catLabelInit && goodArticle && <>\n  //             <Header page={''} onChange={handleChange} />\n  //             <Path page={''} category={catLabelInit} onChange={handleChange} />\n  //             <Main page={''} category={catLabelInit} goodArticle={goodArticle} goodsFromDB={goodsFromDB}\n  //                 favorites={favorites} onFavorites={toggleFavorites} cart={cart} onCart={toggleCart} />\n  //         </>}\n  //         <Footer />\n  //     </div>\n  // )\n  // function handleChange(artcl) {\n  //     setCategory(artcl)\n  //     setSearch('')\n  //     setIsFavorites(false)\n  //     setFilters(dataFilters)\n  // }\n  // function handleSearch(event) {\n  //     setSearch(event.target.value)\n  //     setCategory(undefined)\n  //     setIsFavorites(false)\n  //     setFilters(dataFilters)\n  // }\n  // function handleFavorites() {\n  //     setIsFavorites(!isFavorites)\n  //     setCategory(undefined)\n  //     setSearch('')\n  //     setFilters(dataFilters)\n  // }\n  // function handleSorting() {\n  //     setIsSorting(!isSorting)\n  // }\n  // function handleSelect(filter, filterName, variant) {\n  //     if(filter === 'typeCooler' && variant === 'Корпусной') {\n  //         setFilters({...filters, socket: {name: 'Сокет', value: 'Все'}, typeCooler: {name: 'Тип кулеров', value: variant}})\n  //     }\n  //     else {\n  //         setFilters({...filters, [filter]: {name: filterName, value: variant}})\n  //     }\n  // }\n  // function toggleFavorites(artcl) {\n  //     let newFavorites = []\n  //     if(favorites.includes(artcl)) {\n  //         newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n  //     }\n  //     else {\n  //         newFavorites = [...favorites, artcl]\n  //     }\n  //     localStorage.setItem('favorites', JSON.stringify(newFavorites))\n  //     setFavorites(newFavorites)\n  // }\n  // function toggleCart(artcl) {\n  //     let newCart = []\n  //     if(cart.includes(artcl)) {\n  //         newCart = cart.filter(goodArticle => goodArticle !== artcl)\n  //     }\n  //     else {\n  //         newCart = [...cart, artcl]\n  //     }\n  //     localStorage.setItem('cart', JSON.stringify(newCart))\n  //     setCart(newCart)\n  // }\n}\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/home/andre/baraxolka/src/pages/panel.jsx"],"names":["React","useState","useEffect","Header","Categories","Path","BeforeContent","Main","Footer","goods","AdminGoodList","Panel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;;AAGA,SAASC,KAAT,GAAiB;AACb,sBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UAAP,CADa,CAEbtJQA,K;AAwJT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../header'\nimport Categories from '../main/content/categories'\nimport Path from '../main/content/path'\nimport BeforeContent from '../beforeContent'\nimport Main from '../main'\nimport Footer from '../footer'\nimport goods from '../db/goods'\nimport AdminGoodList from '../main/content/panel/index/adminGoodList'\n\n\nfunction Panel() {\n    return <AdminGoodList />\n    // const [goodsFromDB, setGoodsFromDb] = useState()\n    // useEffect(() => goods.then(data => setGoodsFromDb(data)), [])\n\n    // const catLabelInit = match.params.catLabel\n\n    // const catInit = () => {\n    //     if(catLabelInit === undefined) return undefined\n    //     else {\n    //         switch(catLabelInit.toLowerCase()) {\n    //             case 'cpu':\n    //                 return '0'\n    //             case 'mb':\n    //                 return '1'\n    //             case 'ram':\n    //                 return '2'\n    //             case 'vc':\n    //                 return '3'\n    //             case 'hdd':\n    //                 return '4'\n    //             case 'bp':\n    //                 return '5'\n    //             case 'cool':\n    //                 return '6'\n    //             case 'set':\n    //                 return '7'\n    //             case 'comp':\n    //                 return '8'\n    //             default:\n    //                 return undefined\n    //         }\n    //     }\n    // }\n\n    // const [category, setCategory] = useState(catInit())\n    // const [search, setSearch] = useState('')\n    // const [isFavorites, setIsFavorites] = useState(false)\n    // const [isSorting, setIsSorting] = useState(false)\n\n    // const dataFilters = {\n    //     condition: {name: 'Состояние', value: 'Все'},\n    //     typeCooler: {name: 'Тип кулеров', value: 'Все'},\n    //     socket: {name: 'Сокет', value: 'Все'},\n    //     core: {name: 'Количество ядер', value: 'Все'},\n    //     cpuFrequency: {name: 'Частота', value: 'Все'},\n    //     fsb: {name: 'Частота шины', value: 'Все'},\n    //     tdp: {name: 'Мощность тепловыделения', value: 'Все'},\n    //     ramType: {name: 'Тип ОЗУ', value: 'Все'},\n    //     ramSize: {name: 'Объем ОЗУ', value: 'Все'},\n    //     ramFraq: {name: 'Частота ОЗУ', value: 'Все'},\n    //     videoInterface: {name: 'Тип видео-интерфейса', value: 'Все'},\n    //     hddInterface: {name: 'Тип HDD-интерфейса', value: 'Все'},\n    //     platform: {name: 'Платформа', value: 'Все'},\n    //     videoBitrate: {name: 'Разрядность шины', value: 'Все'},\n    //     hddType: {name: 'Тип накопителя', value: 'Все'},\n    //     hddSize: {name: 'Объем накопителя', value: 'Все'},\n    //     bpPower: {name: 'Мощность', value: 'Все'}\n    // }\n\n    // const [filters, setFilters] = useState(dataFilters)\n\n    // !localStorage.getItem('cart') && localStorage.setItem('cart', JSON.stringify([]))\n    // !localStorage.getItem('favorites') && localStorage.setItem('favorites', JSON.stringify([]))\n\n    // const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')))\n    // const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')))\n\n    // const goodArticle = match.params.goodArticle\n\n    // return (\n    //     <div className=\"container\">\n    //         {!goodArticle && <>\n    //             <Header page={'/'} onChange={handleChange} />\n    //             <Categories category={category} onChange={handleChange} />\n    //             <BeforeContent search={search} onSearch={handleSearch}\n    //                 isFavorites={isFavorites} onFavorites={handleFavorites}\n    //                 isSorting={isSorting} onSorting={handleSorting} />\n    //             <Main page={'/'} search={search} isFavorites={isFavorites} isSorting={isSorting}\n    //                 favorites={favorites} onFavorites={toggleFavorites} cart={cart} onCart={toggleCart}\n    //                 category={category} onSelect={handleSelect} goodsFromDB={goodsFromDB} filters={filters} />\n    //         </>}\n    //         {catLabelInit && goodArticle && <>\n    //             <Header page={''} onChange={handleChange} />\n    //             <Path page={''} category={catLabelInit} onChange={handleChange} />\n    //             <Main page={''} category={catLabelInit} goodArticle={goodArticle} goodsFromDB={goodsFromDB}\n    //                 favorites={favorites} onFavorites={toggleFavorites} cart={cart} onCart={toggleCart} />\n    //         </>}\n    //         <Footer />\n    //     </div>\n    // )\n\n\n    // function handleChange(artcl) {\n    //     setCategory(artcl)\n    //     setSearch('')\n    //     setIsFavorites(false)\n    //     setFilters(dataFilters)\n    // }\n\n    // function handleSearch(event) {\n    //     setSearch(event.target.value)\n    //     setCategory(undefined)\n    //     setIsFavorites(false)\n    //     setFilters(dataFilters)\n    // }\n\n    // function handleFavorites() {\n    //     setIsFavorites(!isFavorites)\n    //     setCategory(undefined)\n    //     setSearch('')\n    //     setFilters(dataFilters)\n    // }\n\n    // function handleSorting() {\n    //     setIsSorting(!isSorting)\n    // }\n\n    // function handleSelect(filter, filterName, variant) {\n    //     if(filter === 'typeCooler' && variant === 'Корпусной') {\n    //         setFilters({...filters, socket: {name: 'Сокет', value: 'Все'}, typeCooler: {name: 'Тип кулеров', value: variant}})\n    //     }\n    //     else {\n    //         setFilters({...filters, [filter]: {name: filterName, value: variant}})\n    //     }\n    // }\n\n    // function toggleFavorites(artcl) {\n    //     let newFavorites = []\n    //     if(favorites.includes(artcl)) {\n    //         newFavorites = favorites.filter(goodArticle => goodArticle !== artcl)\n    //     }\n    //     else {\n    //         newFavorites = [...favorites, artcl]\n    //     }\n    //     localStorage.setItem('favorites', JSON.stringify(newFavorites))\n    //     setFavorites(newFavorites)\n    // }\n\n    // function toggleCart(artcl) {\n    //     let newCart = []\n    //     if(cart.includes(artcl)) {\n    //         newCart = cart.filter(goodArticle => goodArticle !== artcl)\n    //     }\n    //     else {\n    //         newCart = [...cart, artcl]\n    //     }\n    //     localStorage.setItem('cart', JSON.stringify(newCart))\n    //     setCart(newCart)\n    // }\n}\n\nexport default Panel\n"]},"metadata":{},"sourceType":"module"}